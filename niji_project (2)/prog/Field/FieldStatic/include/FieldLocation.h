//[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
/**
 *	GAME FREAK inc.
 *
 *	@file		FieldLocation.h
 *	@brief  位置情報
 *	@author	tomoya takahashi
 *	@date		2015.04.29
 *
 */
//]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
#if !defined( __FIELD_LOCATION_H__ )
#define __FIELD_LOCATION_H__
#pragma once

#include "Field/FieldStatic/include/FieldWorld.h"
#include "Field/FieldStatic/include/Zone/ZoneDataLoader.h"
#include <math/include/gfl2_Quaternion.h>

GFL_NAMESPACE_BEGIN(Field);

//-----------------------------------------------------------------------------
/**
 *					定数宣言
*/
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
/**
 *					構造体宣言
*/
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
/**
 *					クラス宣言
*/
//-----------------------------------------------------------------------------

/**
 *  @brief 位置情報
 */
class Location
{
public:
  // 保存用ワーク
  struct SaveData{
    WorldID             world_id; //<ワールドID
    ZoneID              zone_id;  //<ゾーンID
    u32                 form_no;  //<フォルムナンバー
    f32                 position[3]; //< ポジション
    f32                 quaternion[4]; //< クオータニオン
  };

public:
  WorldID worldId;
  ZoneID  zoneId;
  gfl2::math::Vector3 position;
  gfl2::math::Quaternion quaternion;
  u32 formNo;

public:
  Location();

  //-----------------------------------------------------------------------------
  /**
   * @brief   LOCATIONの初期化
   */
  //-----------------------------------------------------------------------------
  void Initialize( void );

  //----------------------------------------------------------------------------
  /**
   *	@brief  空ロケーションかチェック
   */
   //-----------------------------------------------------------------------------
  bool IsClear() const ;

  //----------------------------------------------------------------------------
  /**
   *	@brief  locationにデータを設定する。
   *
   *	@param	worldID           ワールドID
   *	@param	zoneID            ゾーンID
   *	@param  pos               ポジション
   *	@param  quaternion        クオータニオン
   */
   //-----------------------------------------------------------------------------
   void Set( WorldID worldID, ZoneID zoneID, const gfl2::math::Vector3& pos, const gfl2::math::Quaternion& quaternion );


  //----------------------------------------------------------------------------
  /**
   *	@brief  ロケーションのセーブデータを設定
   */
   //-----------------------------------------------------------------------------
   void Set( const Location::SaveData& data );


  //----------------------------------------------------------------------------
  /**
   *	@brief  ロケーションのセーブデータを設定
   */
   //-----------------------------------------------------------------------------
   void Get( Location::SaveData* p_data ) const;
      
  //----------------------------------------------------------------------------
  /**
   *	@brief  WorldIDを取得
   */
   //-----------------------------------------------------------------------------
   WorldID GetWorldID( void ) const{ return worldId; }

  //----------------------------------------------------------------------------
  /**
   *	@brief  ZoneIDを取得
   */
   //-----------------------------------------------------------------------------
   ZoneID GetZoneID( void ) const{ return zoneId; }

  //----------------------------------------------------------------------------
  /**
   *	@brief  positionを取得
   */
  //-----------------------------------------------------------------------------
  gfl2::math::Vector3 GetPosition( void ) const{ return position; }

  //----------------------------------------------------------------------------
  /**
   *	@brief  quaternionを取得
   */
  //-----------------------------------------------------------------------------
  gfl2::math::Quaternion GetQuaternion( void ) const{ return quaternion; }

  //----------------------------------------------------------------------------
  /**
   *	@brief  formNoを取得
   */
   //-----------------------------------------------------------------------------
   u32 GetFormNo( void ) const{ return formNo; }

};

GFL_NAMESPACE_END(Field);

#endif	// __FIELD_LOCATION_H__


#pragma once
//=================================================================================================
/**
*  @file   FieldMoveCodeBase.h
*  @brief  フィールド用 動作コード ベース
*  @author yy-ikeuchi@gamefreak.co.jp
*  @date   2015.02.17
*/
//=================================================================================================
#include "../MoveCode/FieldMoveCode_define.h"

namespace Field{ namespace MoveModel {

//----------------------------------------------------------------------------------------
//! @brief 動作コード ベース(何もしない
//----------------------------------------------------------------------------------------
class FieldMoveCodeBase
{
public:

  //-----------------------------------------------------------------------------
  /**
  *  @brief  コンストラクタ
  */
  //-----------------------------------------------------------------------------
  FieldMoveCodeBase(void){}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  デストラクタ
  */
  //-----------------------------------------------------------------------------
  virtual ~FieldMoveCodeBase(){}

  //----------------------------------------------------------------------------
  /**
  *  @brief  動作コード処理  初期化
  *
  *  @param  pMoveCodeWork  動作コードワーク
  */
  //-----------------------------------------------------------------------------
  virtual void InitProcess(FieldMoveCodeWork* pMoveCodeWork) const {};

  //----------------------------------------------------------------------------
  /**
  *  @brief  動作コード処理  メイン
  *
  *  @param  pMoveCodeWork  動作コードワーク
  */
  //-----------------------------------------------------------------------------
  virtual void MainProcess(FieldMoveCodeWork* pMoveCodeWork) const {};

  //----------------------------------------------------------------------------
  /**
  *  @brief  動作コード処理  ポスト
  *
  *  @param  pMoveCodeWork  動作コードワーク
  */
  //-----------------------------------------------------------------------------
  virtual void PostProcess(FieldMoveCodeWork* pMoveCodeWork) const {};

  //----------------------------------------------------------------------------
  /**
  *  @brief  動作コード処理  再開
  *
  *  @param  pMoveCodeWork  動作コードワーク
  */
  //-----------------------------------------------------------------------------
  virtual void Resume(FieldMoveCodeWork* pMoveCodeWork) const {}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  動作コード処理  中断
  *
  *  @param  pMoveCodeWork  動作コードワーク
  */
  //-----------------------------------------------------------------------------
  virtual void Suspend(FieldMoveCodeWork* pMoveCodeWork) const {}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  動作コード処理  終了
  *
  *  @param  pMoveCodeWork  動作コードワーク
  *  @param  isSave         セーブ時に呼ばれたかどうか
  */
  //-----------------------------------------------------------------------------
  virtual void Retirement(FieldMoveCodeWork* pMoveCodeWork,b32 isSave) const {}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  動作コード処理  復帰
  *
  *  @param  pMoveCodeWork  動作コードワーク
  *  @param  isLoad         ロードによって動作コードワークが上書きされたかどうか
  */
  //-----------------------------------------------------------------------------
  virtual void Comeback(FieldMoveCodeWork* pMoveCodeWork,b32 isLoad) const {}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  RTTIマネージャーに自身のプロパティを登録
  */
  //-----------------------------------------------------------------------------
  virtual void RegistRtti(void) const {}
};

}; //end of namespace MoveModel
}; //end of namespace Field

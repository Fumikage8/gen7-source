#pragma once
//=================================================================================================
/**
 @file movecode_player.h
 @brief		動作コード　処理管理　基底クラス
 @date	 2014.03.17
 @author takahashi_tomoya 2012.11.30
 @author tamada@gamefreak.co.jp

 */
//=================================================================================================

#include <math/include/gfl2_Vector.h>
#include <math/include/gfl2_Matrix.h>

#include "movemodel_define.h"
#include "movecode.h"

namespace fld{ namespace mmodel {

class MoveCodePlayer : public MoveCodeBase
{
public:

	//-----------------------------------------------------------------------------
	/**
	*	@brief	コンストラクタ
	*/
	//-----------------------------------------------------------------------------
	MoveCodePlayer( void ){}

	//-----------------------------------------------------------------------------
	/**
	*	@brief	デストラクタ
	*/
	//-----------------------------------------------------------------------------
	virtual ~MoveCodePlayer(){}

	//----------------------------------------------------------------------------
	/**
	*	@brief  対応している動作コードの取得
	*
	*	@return 動作コード
	*/
	//-----------------------------------------------------------------------------
	virtual MOVE_CODE GetMVCode(void) const { return MOVE_CODE_PLAYER; }
  
	//----------------------------------------------------------------------------
	/**
	*	@brief  動作コード処理　初期化
	*
	*	@param	p_wk  動作コードワーク
	*/
	//-----------------------------------------------------------------------------
	virtual void InitProcess( MoveCodeWork* p_wk ) const;

	//----------------------------------------------------------------------------
	/**
	*	@brief  動作コード処理  メイン　
	*
	*	@param	p_wk  動作コードワーク
	*/
	//-----------------------------------------------------------------------------
	virtual void MainProcess( MoveCodeWork* p_wk ) const;

	//----------------------------------------------------------------------------
	/**
	*	@brief  動作コード処理  破棄
	*
	*	@param	p_wk  動作コードワーク
	*/
	//-----------------------------------------------------------------------------
	virtual void DeleteProcess( MoveCodeWork* p_wk ) const{}

	//----------------------------------------------------------------------------
	/**
	*	@brief  動作コード処理  復帰
	*
	*	@param	p_wk  動作コードワーク
	*/
	//-----------------------------------------------------------------------------
	virtual void ReturnProcess( MoveCodeWork* p_wk ) const{}
  
private:

	//----------------------------------------------------------------------------
	/**
	*	@brief  アナログスティックの倒し具合からステートを取得
	*
	*	@param	stick  アナログスティックの倒し具合
	*	@return ステート
	*/
	//-----------------------------------------------------------------------------
	u32 getStateFromStickLevel( f32 stick ) const;

};	// end of class MoveCodePlayer;
	
}; //end of namespace mmodel
}; //end of namespace fld

#pragma once
//=================================================================================================
/**
 *  @file   BaseShape.h
 *  @brief  コリジョン向け基本形状
 *  @author yy-ikeuchi@gamefreak.co.jp
 *  @date   2015.02.17
 */
//=================================================================================================
#include <math/include/gfl2_Vector3.h>

namespace gfl2 { namespace collision {
    class CollisionModel;
} }

//----------------------------------------------------------------------------------------
//! @brief コリジョン向け基本形状
//----------------------------------------------------------------------------------------
class BaseShape
{
public:

  //-----------------------------------------------------------------------------
  /**
  *  @brief  コンストラクタ
  */
  //-----------------------------------------------------------------------------
  BaseShape(){}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  デストラクタ
  */
  //-----------------------------------------------------------------------------
  virtual ~BaseShape(){}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  RTTIマネージャーに自身のプロパティを登録
  */
  //-----------------------------------------------------------------------------
  virtual void RegistRtti(void){}
};

//----------------------------------------------------------------------------------------
//! @brief コリジョン向け2D球形状
//----------------------------------------------------------------------------------------
class SphereShape2D : public BaseShape
{
public:

  //-----------------------------------------------------------------------------
  /**
  *  @brief  コンストラクタ
  */
  //-----------------------------------------------------------------------------
  SphereShape2D();

  //-----------------------------------------------------------------------------
  /**
  *  @brief  デストラクタ
  */
  //-----------------------------------------------------------------------------
  virtual ~SphereShape2D(){}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  RTTIマネージャーに自身のプロパティを登録
  */
  //-----------------------------------------------------------------------------
  virtual void RegistRtti(void);

  f32                 m_r;
  gfl2::math::Vector3 m_pos;
};

//----------------------------------------------------------------------------------------
//! @brief コリジョン向け3D球形状
//----------------------------------------------------------------------------------------
class SphereShape3D : public BaseShape
{
public:

  //-----------------------------------------------------------------------------
  /**
  *  @brief  コンストラクタ
  */
  //-----------------------------------------------------------------------------
  SphereShape3D();

  //-----------------------------------------------------------------------------
  /**
  *  @brief  デストラクタ
  */
  //-----------------------------------------------------------------------------
  virtual ~SphereShape3D(){}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  RTTIマネージャーに自身のプロパティを登録
  */
  //-----------------------------------------------------------------------------
  virtual void RegistRtti(void);

  f32                 m_r;
  gfl2::math::Vector3 m_pos;
};

//----------------------------------------------------------------------------------------
//! @brief コリジョン向け2D球形状
//----------------------------------------------------------------------------------------
class BoxShape2D : public BaseShape
{
public:

  //-----------------------------------------------------------------------------
  /**
  *  @brief  コンストラクタ
  */
  //-----------------------------------------------------------------------------
  BoxShape2D();

  //-----------------------------------------------------------------------------
  /**
  *  @brief  デストラクタ
  */
  //-----------------------------------------------------------------------------
  virtual ~BoxShape2D(){}

   //-----------------------------------------------------------------------------
  /**
  *  @brief  RTTIマネージャーに自身のプロパティを登録
  */
  //-----------------------------------------------------------------------------
  virtual void RegistRtti(void);

  gfl2::math::Vector3 m_u0;     //< 長方形のローカルなX軸を表す単位ベクトル
  gfl2::math::Vector3 m_u1;     //< 長方形のローカルなY軸を表す単位ベクトル
  f32                 m_e0;     //< X軸にそった長方形の長さの半分
  f32                 m_e1;     //< Y軸にそった長方形の長さの半分
  gfl2::math::Vector3 m_pos;
};

//----------------------------------------------------------------------------------------
//! @brief コリジョン向けメッシュ形状
//----------------------------------------------------------------------------------------
class MeshShape : public BaseShape
{
public:

  //-----------------------------------------------------------------------------
  /**
  *  @brief  コンストラクタ
  */
  //-----------------------------------------------------------------------------
  MeshShape();

  //-----------------------------------------------------------------------------
  /**
  *  @brief  デストラクタ
  */
  //-----------------------------------------------------------------------------
  virtual ~MeshShape(){}

  //-----------------------------------------------------------------------------
  /**
  *  @brief  RTTIマネージャーに自身のプロパティを登録
  */
  //-----------------------------------------------------------------------------
  virtual void RegistRtti(void);

  gfl2::collision::CollisionModel *m_pCollisionModel;
  gfl2::math::Vector3              m_pos;
};


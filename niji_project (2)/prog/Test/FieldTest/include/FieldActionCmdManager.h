//[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
/**
 *	GAME FREAK inc.
 *
 *	@file		FieldActionCmdManager.h
 *	@brief  フィールドアクションコマンドマネージャ
 *	@author	tomoya takahashi
 *	@date		2011.05.14
 *
 *	@sa  svn://svn-xy.gamefreak.co.jp/xy_project/branches/upper/document/takahashi_tomoya/設計書類/FieldMoveModelManager.xls
 *	@sa  svn://svn-xy.gamefreak.co.jp/xy_project/branches/upper/document/takahashi_tomoya/動作モデル/動作モデル＿機能追加方法.docx 
 */
//]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
#ifndef __FIELDACTIONCMDMANAGER_H__
#define __FIELDACTIONCMDMANAGER_H__

#include "FieldActionCmdBase.h"

namespace field{
namespace mmodel{

//-----------------------------------------------------------------------------
/**
 *					定数宣言
*/
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
/**
 *					構造体宣言
*/
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
/**
 *					クラス宣言
*/
//-----------------------------------------------------------------------------
class ActionCmdManager
{

public:
  
  //----------------------------------------------------------------------------
  /**
   *	@brief    初期化
   *
   *	@param	  p_heap    ヒープ
   */
  //-----------------------------------------------------------------------------
  static void Initialize( gfl2::heap::HeapBase* p_heap );

  //----------------------------------------------------------------------------
  /**
   *	@brief    破棄
   */
  //-----------------------------------------------------------------------------
  static void Finalize( void );

  //----------------------------------------------------------------------------
  /**
   *	@brief    MoveModelWork側でのコマンドの実行
   *
   *	*コマンドの終了状態を保持している。
   *	*コマンドを実行した人が、ActionCmdWorkをクリアする必要がある。
   */
  //-----------------------------------------------------------------------------
  static void ActionCmd( ActionCmdBase::ActionCmdWork* p_wk );

  //----------------------------------------------------------------------------
  /**
   *	@brief    動作モデルPush処理による強制終了時の処理
   *	@note     ActionCmdWorkはPop時にクリアされる
   *
   *	*コマンドを実行した人が、ActionCmdWorkをクリアする必要がある。
   */
  //-----------------------------------------------------------------------------
  static void PushCmd( ActionCmdBase::ActionCmdWork* p_wk );

  //----------------------------------------------------------------------------
  /**
   *	@brief    コマンド完了待ち
   *
   *	@retval true    完了
   *	@retval false   途中
   */
  //-----------------------------------------------------------------------------
  static bool IsEndCmd( const ActionCmdBase::ActionCmdWork* cp_wk );

private:

  //! アクションコマンドテーブル
  static ActionCmdBase* m_pTbl[ AC_MAX ];
  
};


} // mmodel
} // field

#endif	// __FIELDACTIONCMDMANAGER_H__


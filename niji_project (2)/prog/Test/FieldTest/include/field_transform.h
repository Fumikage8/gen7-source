#pragma once
//=================================================================================================
/**
 *	@file	field_transform.h
 *	@brief
 *	@date	2014.03.07
 *	@author tamada@gamefreak.co.jp
 */
//=================================================================================================
#include <math/include/gfl2_Vector.h>
#include <math/include/gfl2_Matrix.h>
#include <math/include/gfl2_SRT.h>

//=================================================================================================
// 座標保持
//=================================================================================================
class FieldTransform
{
public:

	//-----------------------------------------------------------------------------
	/**
	*	@brief	コンストラクタ
	*/
	//-----------------------------------------------------------------------------
	FieldTransform();

	//-----------------------------------------------------------------------------
	/**
	*	@brief	デストラクタ
	*/
	//-----------------------------------------------------------------------------
	~FieldTransform();

	//----------------------------------------------------------------------------
	/**
	*	@brief  行列更新(座標→スケール→回転)
	*/
	//-----------------------------------------------------------------------------
	void				Update			( void );

	//----------------------------------------------------------------------------
	/**
	*	@brief  座標設定
	*	@param	vec	座標
	*/
	//-----------------------------------------------------------------------------
  void				SetTranslation	( const gfl2::math::Vector & vec ){ m_trans = vec; m_isDirty = true; }

 //----------------------------------------------------------------------------
	/**
	*	@brief  座標設定(演出用)
	*	@param	vec	座標
	*/
	//-----------------------------------------------------------------------------
  void				SetEffectTranslation	( const gfl2::math::Vector & vec ){ m_transEffect = vec; m_isDirty = true; }

	//----------------------------------------------------------------------------
	/**
	*	@brief  スケール設定
	*	@param	vec	スケール
	*/
	//-----------------------------------------------------------------------------
	void				SetScale		( const gfl2::math::Vector & vec ){ m_scale = vec; m_isDirty = true; }

	//----------------------------------------------------------------------------
	/**
	*	@brief  回転設定
	*	@param	vec	回転
	*/
	//-----------------------------------------------------------------------------
	void				SetQuaternion	( const gfl2::math::Quaternion & qua ){ m_quaternion = qua; m_isDirty = true; }

	//----------------------------------------------------------------------------
	/**
	*	@brief  座標取得
	*	@return 座標
	*/
	//-----------------------------------------------------------------------------
	gfl2::math::Vector	GetTranslation	( void ) const	{ return m_trans; }
  
    //----------------------------------------------------------------------------
    /**
    *	@brief  座標取得
    *	@return 座標
    */
    //-----------------------------------------------------------------------------
    gfl2::math::Vector	GetEffectTranslation	( void ) const	{ return m_transEffect; }

 
	//----------------------------------------------------------------------------
	/**
	*	@brief  スケール取得
	*	@return スケール
	*/
	//-----------------------------------------------------------------------------
	gfl2::math::Vector	GetScale		( void ) const	{ return m_scale; }

	//----------------------------------------------------------------------------
	/**
	*	@brief  回転取得
	*	@return 回転
	*/
	//-----------------------------------------------------------------------------
	gfl2::math::Quaternion	GetQuaternion		( void ) const	{ return m_quaternion; }

	//----------------------------------------------------------------------------
	/**
	*	@brief  行列取得(座標→スケール→回転)
	*	@return 行列
	*/
	//-----------------------------------------------------------------------------
	gfl2::math::Matrix	GetWorldMatrix	( void ) const	{ return m_worldMtx; }

	//----------------------------------------------------------------------------
	/**
	*	@brief  SRT取得
	*/
	//-----------------------------------------------------------------------------
	gfl2::math::SRT		GetSRT			( void ) const;

	//----------------------------------------------------------------------------
	/**
	*	@brief 　更新状態を取得
	*/
	//-----------------------------------------------------------------------------
  bool IsDirty() const { return m_isDirty; }

private:

	gfl2::math::Vector		m_trans;
	gfl2::math::Vector		m_scale;
	gfl2::math::Quaternion	m_quaternion;
	gfl2::math::Matrix		m_worldMtx; 
  bool                  m_isDirty;

	gfl2::math::Vector		m_transEffect;    // @todo ここじゃないかも
};
#pragma once
//=================================================================================================
/**
 @file		movecode.h
 @brief		動作コード　処理管理　基底クラス
 @date		2014.03.13
 @author	takahashi_tomoya 2011.05.14
 @author	tamada@gamefreak.co.jp
 */
//=================================================================================================
#include <debug/include/gfl2_Assert.h>
#include "../include/movemodel_define.h"

namespace fld{ namespace mmodel {

//----------------------------------------------------------------------------------------
//! @brief 動作コード ベース(何もしない
//----------------------------------------------------------------------------------------
class MoveCodeBase
{
public:

 	//----------------------------------------------------------------------------
	/**
	*	@brief  ワーク初期化
	*
	*	@param	p_wk      ワーク
	*	@param	p_model   動作モデルベース
	*/
	//-----------------------------------------------------------------------------
	static void InitializeMoveCodeWork( MoveCodeWork* p_wk, MoveModel* p_model )
	{
		p_wk->p_model = p_model;
		p_wk->mv_code = MOVE_CODE_NONE;
	}

	//----------------------------------------------------------------------------
	/**
	*	@brief  共有ワークを取得
	*    
	*	@param	p_wk    動作コードワーク
	*	@param	size    必要なサイズ
	*	@return ワークポインタ
	*/
	//-----------------------------------------------------------------------------
	static void* GetMoveCodeWork( MoveCodeWork* p_wk, u32 size )
	{
		GFL_ASSERT( size <= MOVECODE_WORK_SIZE );
		return reinterpret_cast<void*>(p_wk->work);
	}

public:

	//-----------------------------------------------------------------------------
	/**
	*	@brief	コンストラクタ
	*/
	//-----------------------------------------------------------------------------
	MoveCodeBase( void ){}

	//-----------------------------------------------------------------------------
	/**
	*	@brief	デストラクタ
	*/
	//-----------------------------------------------------------------------------
	virtual ~MoveCodeBase(){}

	//----------------------------------------------------------------------------
	/**
	*	@brief  動作コード処理　初期化
	*
	*	@param	p_wk  動作コードワーク
	*/
	//-----------------------------------------------------------------------------
	virtual void InitProcess( MoveCodeWork* p_wk ) const {};

	//----------------------------------------------------------------------------
	/**
	*	@brief  動作コード処理  メイン　
	*
	*	@param	p_wk  動作コードワーク
	*/
	//-----------------------------------------------------------------------------
	virtual void MainProcess( MoveCodeWork* p_wk ) const {};
  
};	// end of class MoveCodeBase;

	
}; //end of namespace mmodel
}; //end of namespace fld

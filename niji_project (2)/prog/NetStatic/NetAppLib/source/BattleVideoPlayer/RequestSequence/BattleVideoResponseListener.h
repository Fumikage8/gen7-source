// ============================================================================
/*
 * @file BattleVideoResponseListener.h
 * @brief BattleVideoアプリで行う通信リクエストのレスポンスリスナーです。
 * @date 2015.06.23
 */
// ============================================================================
#if !defined( BATTLEVIDEORESPONSELISTENER_H_INCLUDE )
#define BATTLEVIDEORESPONSELISTENER_H_INCLUDE
#pragma once

#include <macro/include/gfl2_macros.h>
#include "ExtSavedata/include/BattleRecorderSaveData.h"

GFL_NAMESPACE_BEGIN(NetApp)
GFL_NAMESPACE_BEGIN(BattleVideo)




//--------------------------------------------------------------------------------------------
/**
  * @brief   BattleVideoアプリで行う通信リクエストのレスポンスリスナー
  */
//--------------------------------------------------------------------------------------------
class BattleVideoResponseListener
{
public:

  enum ERROR_TYPE
  {
    ERROR_TYPE_default = 0,   //デフォルトのエラータイプ。アプレットでエラーを表示するのでアプリケーション側でエラーを表示する必要はない
    ERROR_TYPE_uploadFailed,  //サーバが一杯でアップロードできなかったときのエラー。アプリ側でメッセージを表示する
    ERROR_TYPE_fatal,         //SDフェイタルエラー (ローカルハンドリング用)
  };


public:
  //--------------------------------------------------------------------------------------------
  /**
   * @brief   通信エラー
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnError( BattleVideoResponseListener::ERROR_TYPE errorType ) = 0;

  //--------------------------------------------------------------------------------------------
  /**
   * @brief   同期成功
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnSyncSuccess( void ) = 0;

  //--------------------------------------------------------------------------------------------
  /**
   * @brief   削除成功
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnDeleteSuccess( void ) = 0;


  //--------------------------------------------------------------------------------------------
  /**
   * @brief   公開取り消し失敗（公開当日だったら取り消しに失敗する）
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnCancelUploadFailed( void ) = 0;

  //--------------------------------------------------------------------------------------------
  /**
   * @brief   アップロード成功
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnUploadSuccess( void ) = 0;



  //--------------------------------------------------------------------------------------------
  /**
   * @brief   バトルビデオが不正
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnUploadInvalid( void ) = 0;

  //--------------------------------------------------------------------------------------------
  /**
   * @brief   ダウンロード成功
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnDownloadSuccess( ExtSavedata::BattleRecorderSaveData::BATTLE_REC_UPLOAD_DATA* pDownloadData , u32 playCount , ExtSavedata::BattleRecorderSaveData::REC_DATE* pDate ) = 0;

  //--------------------------------------------------------------------------------------------
  /**
   * @brief   ダウンロードしたいファイルが見つからない
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnDownloadNotFound( void ) = 0;

  //--------------------------------------------------------------------------------------------
  /**
   * @brief   再生回数インクリメント成功
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnIncPlayCountSuccess( void ) = 0;

  //--------------------------------------------------------------------------------------------
  /**
   * @brief   再生完走通知成功
   */
  //--------------------------------------------------------------------------------------------
  virtual void OnPlayCompleteSuccess( void ) = 0;
};


GFL_NAMESPACE_END(BattleVideo)
GFL_NAMESPACE_END(NetApp)

#endif // BATTLEVIDEORESPONSELISTENER_H_INCLUDE

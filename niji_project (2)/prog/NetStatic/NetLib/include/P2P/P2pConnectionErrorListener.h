//==============================================================================
/**
 * @file	P2pConnectionErrorListener.h
 * @brief	P2PConnectionManagerのエラーイベントリスナー
 * @author	ichiraku_katsuhiko
 * @date	2015/05/20 14:51:26
 */
// =============================================================================

#ifndef __P2P_CONNECTION_ERROR_LISTENER_HEADER__
#define __P2P_CONNECTION_ERROR_LISTENER_HEADER__
#pragma once

namespace NetLib{
namespace P2P{

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------

//------------------------------------------------------------------
/**
 * @brief   P2PConnectionManagerのエラー通知イベントハンドラ
 *          P2Pエラーリスナープロジェクト版です。ライブリラリ側のものプラスαがあります。
 */
//------------------------------------------------------------------
class P2pConnectionErrorListener
{
public:
  //------------------------------------------------------------------
  /**
   * @brief システムエラー発生通知（ライブラリの失敗通知など）
   */
  //------------------------------------------------------------------
  virtual void OnP2pConnectionErrorSystem() = 0;

  //------------------------------------------------------------------
  /**
  * @brief Nexエラー発生通知
  *
  * @param[in] errorCode  エラーアプレット用エラーコード
  */
  //------------------------------------------------------------------
  virtual void OnP2pConnectionErrorNex( u32 errorCode ) = 0;

  //------------------------------------------------------------------
  /**
   * @brief P2P切断通知
   */
  //------------------------------------------------------------------
  virtual void OnP2pConnectionErrorSessionLeft() = 0;

  //------------------------------------------------------------------
  /**
   * @brief マッチメイクエラー通知（独自ハンドリング版）
   * 
   * @note  エラーアプレットは表示しない。
   */
  //------------------------------------------------------------------
  virtual void OnP2pConnectionErrorMatchMakeFailed() = 0;

  //------------------------------------------------------------------
  /**
  * @brief 内部で確保されたヒープメモリが枯渇したことを通知
  */
  //------------------------------------------------------------------
  virtual void OnP2pConnectionErrorOutOfMemory() = 0;

  //------------------------------------------------------------------
  /**
   * @brief タイムアウト発生通知
   */
  //------------------------------------------------------------------
  virtual void OnP2pConnectionErrorTimeout() = 0;
};

} // namespace P2P
} // namespace NetLib

#endif // __P2P_CONNECTION_ERROR_LISTENER_HEADER__

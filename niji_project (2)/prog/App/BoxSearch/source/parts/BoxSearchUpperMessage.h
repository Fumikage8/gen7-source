#if !defined( __APP_BOX_SEARCH_UPPER_MESSAGE_H_INCLUDED__ )
#define __APP_BOX_SEARCH_UPPER_MESSAGE_H_INCLUDED__
#pragma once
//======================================================================
/**
 * @file    BoxSearchUpperMessage.h
 * @date    2015/07/27 18:00:25
 * @author  fukushima_yuya
 * @brief   ボックス検索：上画面メッセージ
 * @par Copyright
 * (C)1995-2015 GAME FREAK inc. All Rights Reserved.
 */
//======================================================================

// niji
#include "App/BoxSearch/source/BoxSearchConst.h"

// pml
#include <pml/include/pmlib.h>


//------------------------------------------------------------------------------
// @brief   前方宣言
//------------------------------------------------------------------------------
GFL_NAMESPACE_BEGIN( App )
GFL_NAMESPACE_BEGIN( BoxSearch )
class DrawerBase;
GFL_NAMESPACE_END( BoxSearch )
GFL_NAMESPACE_END( App )


GFL_NAMESPACE_BEGIN( App )
GFL_NAMESPACE_BEGIN( BoxSearch )

//------------------------------------------------------------------------------
// @brief   ボックス検索：上画面メッセージ
//------------------------------------------------------------------------------
class UpperMsg
{
  GFL_FORBID_COPY_AND_ASSIGN( UpperMsg );

public:
  //------------------------------------------------------------------
  /**
   * @brief	  コンストラクタ
   */
  //------------------------------------------------------------------
  UpperMsg( DrawerBase* base, gfl2::str::MsgData* msgData_Tokusei );

  //------------------------------------------------------------------
  /**
   * @brief   デストラクタ
   */
  //------------------------------------------------------------------
  ~UpperMsg( void ) { ; }

public:
  //------------------------------------------------------------------
  /**
   * @brief   初期化
   */
  //------------------------------------------------------------------
  void Initialize( void );

public:
  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(検索項目リスト用)
   */
  //------------------------------------------------------------------
  void SetMessage_ItemList( void );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(頭文字選択用)
   *
   * @param   listID    リストの種類
   */
  //------------------------------------------------------------------
  void SetMessage_Initial( u32 listID );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(ポケモン名用)
   */
  //------------------------------------------------------------------
  void SetMessage_PokeName( void );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(タイプ用)
   *
   * @param   listID  リストの種類
   * @param   type1   タイプ１
   * @param   type2   タイプ２
   */
  //------------------------------------------------------------------
  void SetMessage_Type( u32 listID, u8 type1, u8 type2 );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(技名用)
   */
  //------------------------------------------------------------------
  void SetMessage_WazaName( void );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(技マシン用)
   */
  //------------------------------------------------------------------
  void SetMessage_WazaMachine( void );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(特性用)
   *
   * @param   tokusei   特性No
   */
  //------------------------------------------------------------------
  void SetMessage_Tokusei( TokuseiNo tokusei );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(性格用)
   *
   * @param   seikaku   性格ID
   */
  //------------------------------------------------------------------
  void SetMessage_Seikaku( pml::pokepara::Seikaku seikaku );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(性別用)
   */
  //------------------------------------------------------------------
  void SetMessage_Gender( void );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(もちもの用)
   */
  //------------------------------------------------------------------
  void SetMessage_Item( void );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(ボックスマーク用)
   */
  //------------------------------------------------------------------
  void SetMessage_BoxMark( void );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(チーム登録用)
   */
  //------------------------------------------------------------------
  void SetMessage_TeamEntry( void );

  //------------------------------------------------------------------
  /**
   * @brief   メッセージの設定(チーム名用)
   */
  //------------------------------------------------------------------
  void SetMessage_TeamName( void );

private:
  //------------------------------------------------------------------
  /**
   * @brief   タイプ表示用のメッセージIDを取得
   *
   * @param   type    タイプ
   *
   * @return  "(type == POKETYPE_NULL) = [-]"
   * @return  "(type != POKETYPE_NULL) = タイプ名"
   */
  //------------------------------------------------------------------
  u32 GetTypeMsg( u8 type );

  //------------------------------------------------------------------
  /**
   * @brief   ガイドオンリーメッセージ
   *
   * @param   msgID   メッセージ
   */
  //------------------------------------------------------------------
  void SetGuideOnly( u32 msgID );

public:
  static const u32 PANE_TABLE_NUM = 6;

private:
  DrawerBase*           m_pBase;

  gfl2::str::MsgData*   m_pTokuseiInfo;

private:
  gfl2::lyt::LytPane*         m_pMsgWndPane;

  gfl2::lyt::LytTextBox*      m_pGuideText;

  gfl2::lyt::LytTextBox*      m_pNameText;

  gfl2::lyt::LytTextBox*      m_pDescText;

  gfl2::lyt::LytTextBox*      m_pType1Text;

  gfl2::lyt::LytTextBox*      m_pType2Text;
};

GFL_NAMESPACE_END( BoxSearch )
GFL_NAMESPACE_END( App )

#endif // NIJI_PROJECT_APP_BOX_SEARCH_UPPER_MESSSAGE_H_INCLUDED
#if !defined( __RESORT_LOWER_COURSE_SELECT_DRAW_H__ )
#define __RESORT_LOWER_COURSE_SELECT_DRAW_H__
#pragma once
//======================================================================
/**
 * @file    ResortLowerCourseSelectDraw.h
 * @date    2015/10/02 12:08:36
 * @author  fukushima_yuya
 * @brief   ポケリゾート：コース選択画面(下)
 * @par Copyright
 * (C)1995-2015 GAME FREAK inc. All Rights Reserved.
 */
//======================================================================

// niji
#include "ResortLowerBaseDraw.h"

#include <App/Resort/source/ResortConst.h>


//------------------------------------------------------------------------------
// @brief   前方宣言
//------------------------------------------------------------------------------
GFL_NAMESPACE_BEGIN(App)
GFL_NAMESPACE_BEGIN(Resort)
class TalkMessage;
GFL_NAMESPACE_END(Resort)
GFL_NAMESPACE_END(App)


GFL_NAMESPACE_BEGIN(App)
GFL_NAMESPACE_BEGIN(Resort)

//------------------------------------------------------------------------------
// @brief   コース選択画面(下)
//------------------------------------------------------------------------------
class LowerCourseSelectDraw
  : public LowerBaseDraw
{
  GFL_FORBID_COPY_AND_ASSIGN(LowerCourseSelectDraw);

public:
  //------------------------------------------------------------------
  /**
   * @brief	  コンストラクタ
   *
   * @param   param   生成パラメータ
   */
  //------------------------------------------------------------------
  LowerCourseSelectDraw( CreateParam& param );

  //------------------------------------------------------------------
  /**
   * @brief   デストラクタ
   */
  //------------------------------------------------------------------
  virtual ~LowerCourseSelectDraw( void ) { ; }


private:
  //------------------------------------------------------------------
  /**
   * @brief   2D関連作成
   *
   * @param   param   初期化パラメータ
   */
  //------------------------------------------------------------------
  virtual void Initialize2D( InitParam& param );

  //------------------------------------------------------------------
  /**
   * @brief   クラスの初期化
   *
   * @param   param   初期化パラメータ
   */
  //------------------------------------------------------------------
  virtual void InitializeClass( InitParam& param );

  //------------------------------------------------------------------
  /**
   * @brief   ペインの初期化
   */
  //------------------------------------------------------------------
  virtual void InitializePane( void );

  //------------------------------------------------------------------
  /**
   * @brief   初期テキスト
   */
  //------------------------------------------------------------------
  virtual void InitializeText( void );

public:
  //------------------------------------------------------------------
  /**
   * @brief   コース選択画面IDの設定
   *
   * @param   id    コース選択画面ID
   */
  //------------------------------------------------------------------
  void SetCourseSelectType( u8 id ) { m_CourseSelectID = id; }

  //------------------------------------------------------------------
  /**
   * @brief   うんどうのグループインデックスの設定
   *
   * @param   index   グループインデックス
   */
  //------------------------------------------------------------------
  void SetGimGroupIndex( u8 index ) { m_GroupIndex = index; }

  //------------------------------------------------------------------
  /**
   * @brief   開く
   */
  //------------------------------------------------------------------
  virtual void Open( void );

  //------------------------------------------------------------------
  /**
   * @brief   閉じる
   */
  //------------------------------------------------------------------
  virtual void Close( void );

private:
  //------------------------------------------------------------------
  /**
   * @brief   各コースの表示
   */
  //------------------------------------------------------------------
  void SetupCourse( void );

  //------------------------------------------------------------------
  /**
   * @brief   コース選択の設定
   */
  //------------------------------------------------------------------
  void SetCourseSelect( void );

  //------------------------------------------------------------------
  /**
   * @brief   コース選択タイトルの設定
   */
  //------------------------------------------------------------------
  void SetTitleText( void );

  //------------------------------------------------------------------
  /**
   * @brief   コースイメージの切り替え
   */
  //------------------------------------------------------------------
  void SetCourseImage( void );

  //------------------------------------------------------------------
  /**
   * @brief   コーステキストの切り替え
   */
  //------------------------------------------------------------------
  void SetCourseText( void );

  //------------------------------------------------------------------
  /**
   * @brief   必要なアイテムの表示
   */
  //------------------------------------------------------------------
  void SetNeedItemCount( void );

  //------------------------------------------------------------------
  /**
   * @brief   決定ボタンの設定
   */
  //------------------------------------------------------------------
  void SetDecideButton( void );

  //------------------------------------------------------------------
  /**
   * @brief   ページ切り替えボタンの設定
   */
  //------------------------------------------------------------------
  void SetArrowButton( void );

private:
  //------------------------------------------------------------------
  /**
   * @brief   コース数の取得
   */
  //------------------------------------------------------------------
  u8 GetCourseMax( void );

  //------------------------------------------------------------------
  /**
   * @brief   たんけんリゾートのメインイメージアニメの取得
   *
   * @return  アニメID
   */
  //------------------------------------------------------------------
  u32 GetAdvMainImageAnim( void );

  //------------------------------------------------------------------
  /**
   * @brief   たんけんリゾートのサブイメージアニメの取得
   *
   * @param   index   コースインデックス
   *
   * @return  アニメID
   */
  //------------------------------------------------------------------
  u32 GetAdvSubImageAnim( u32 index );

  //------------------------------------------------------------------
  /**
   * @brief   たんけんリゾートのコーステキストの取得
   *
   * @param   index     [in]コースインデックス
   * @param   nameMsg   [out]名前テキストID
   * @param   descMsg   [out]説明テキストID
   */
  //------------------------------------------------------------------
  void GetAdvCourseText( u32 index, u32* nameMsg, u32* descMsg );

private:
  //------------------------------------------------------------------
  /**
   * @brief   次のコースへ
   */
  //------------------------------------------------------------------
  void NextCourse( void );

  //------------------------------------------------------------------
  /**
   * @brief   前のコースへ
   */
  //------------------------------------------------------------------
  void PrevCourse( void );

  //------------------------------------------------------------------
  /**
   * @brief   コースを決定
   */
  //------------------------------------------------------------------
  void DecideCourse( void );

  //------------------------------------------------------------------
  /**
   * @brief   コースの設定：たんけんリゾート
   */
  //------------------------------------------------------------------
  void SetCourseID_Adventure( void );


public:
  //------------------------------------------------------------------
  /**
   * @brief   開発するリゾートID
   *
   * @return  リゾートID
   */
  //------------------------------------------------------------------
  u8 GetDevResort( void ) const { return m_DevResort; }

  //------------------------------------------------------------------
  /**
   * @brief   会話メッセージの設定
   *
   * @param   talkMsg   会話メッセージ
   */
  //------------------------------------------------------------------
  void SetTalkMessage( TalkMessage* talkMsg ) { m_pTalkMessage = talkMsg; }


private:   //!< app::ui::UIInputListener
  //------------------------------------------------------------------
  /**
   * @brief   ペインアクション通知用リスナ
   *
   * @param   paneID
   */
  //------------------------------------------------------------------
  virtual app::ui::UIInputListener::ListenerResult OnLayoutPaneEvent( const u32 paneID );

private:   //!< app::tool::ButtonManager
  //------------------------------------------------------------------
  /**
   * @brief   ボタンの個別セットアップ
   *
   * @param   btnMan    ボタンマネージャ
   */
  //------------------------------------------------------------------
  virtual void SetupButton( app::tool::ButtonManager* btnMan );

private:
  TalkMessage*    m_pTalkMessage;

private:
  u8      m_CourseSelectID;

  u8      m_CourseIndex;

  u8      m_CourseMax;

  u8      m_DevelopResort[RESORT_ID_MAX];

  u8      m_DevelopLevel[RESORT_ID_MAX];

  u8      m_DevResort;

  u8      m_DevNeedNum;

  u32     m_PrevCourseImageAnim;

  u8      m_GroupIndex;

private:
  gfl2::lyt::LytTextBox*  m_pHeaderMain;

  gfl2::lyt::LytPane*     m_pCourseSubImage;

  gfl2::lyt::LytTextBox*  m_pCourseName;

  gfl2::lyt::LytTextBox*  m_pCourseDesc;

  gfl2::lyt::LytTextBox*  m_pPokeCount;

  gfl2::lyt::LytTextBox*  m_pMameCount;
};

GFL_NAMESPACE_END(Resort)
GFL_NAMESPACE_END(App)

#endif // __RESORT_LOWER_COURSE_SELECT_DRAW_H__

#if !defined( __RESORT_FLOW_LISTENER_H_INCLUDED__ )
#define __RESORT_FLOW_LISTENER_H_INCLUDED__
#pragma once
//======================================================================
/**
 * @file    ResortFlowListener.h
 * @date    2015/10/13 19:44:07
 * @author  fukushima_yuya
 * @brief   フロー用リスナー
 * @par Copyright
 * (C)1995-2015 GAME FREAK inc. All Rights Reserved.
 */
//======================================================================

// gflib2
#include <macro/include/gfl2_Macros.h>
#include <types/include/gfl2_Typedef.h>


GFL_NAMESPACE_BEGIN( App )
GFL_NAMESPACE_BEGIN( Resort )

//------------------------------------------------------------------------------
// @brief   フロー用リスナー
//------------------------------------------------------------------------------
class ResortFlowListener
{
public:
  //--------------------------------------------------------------------------
  /**
   * @brief   うんどうフローからのボックス画面の呼び出し
   * @param   nextSeq   次のシーケンス
   */
  //--------------------------------------------------------------------------
  virtual void OnCallBoxGim( u8 nextSeq ) { ; }

  //--------------------------------------------------------------------------
  /**
   * @brief   おんせんフローからのボックス画面の呼び出し
   */
  //--------------------------------------------------------------------------
  virtual void OnCallBoxHotSpa( void ) { ; }

  //--------------------------------------------------------------------------
  /**
   * @brief   図鑑の呼び出し
   */
  //--------------------------------------------------------------------------
  virtual void OnCallZukan( void ) { ; }

  //--------------------------------------------------------------------------
  /**
   * @brief   ステータスの呼び出し
   */
  //--------------------------------------------------------------------------
  virtual void OnCallStatus( void ) { ; }

  //--------------------------------------------------------------------------
  /**
   * @brief   タマゴ孵化デモの呼び出し
   */
  //--------------------------------------------------------------------------
  virtual void OnCallEggDemo( void ) { ; }

  //--------------------------------------------------------------------------
  /**
   * @brief   リゾートの開発に伴うデータの更新
   */
  //--------------------------------------------------------------------------
  virtual void OnUpdateResort( void ) { ; }

  //--------------------------------------------------------------------------
  /**
   * @brief   リゾートの終了
   */
  //--------------------------------------------------------------------------
  virtual void OnCallResortEnd( void ) { ; }

public:
  //--------------------------------------------------------------------------
  /**
   * @brief   リゾートの変更
   *
   * @param   resortID    リゾートID
   */
  //--------------------------------------------------------------------------
  virtual void ChangeResort( u8 resortID ) { ; }

public:
  //--------------------------------------------------------------------------
  /**
   * @brief   フェードインリクエスト
   */
  //--------------------------------------------------------------------------
  virtual void RequestFadeIn( void ) { ; }
};

GFL_NAMESPACE_END( Resort )
GFL_NAMESPACE_END( App )

#endif // __RESORT_FLOW_LISTENER_H_INCLUDED__
//=============================================================================
/**
 * @file    BagFrame.h
 * @brief   バッグ画面フレーム
 * @author  Hiroyuki Nakamura
 * @date    2015.03.04
 */
//=============================================================================
#if !defined( BAG_FRAME_H_INCLUDED )
#define BAG_FRAME_H_INCLUDED

#pragma once

// gflib
#include <types/include/gfl2_Typedef.h>
#include <macro/include/gfl2_Macros.h>
// pmlib
#include <pml/include/pmlib.h>
// niji
#include "Savedata/include/MyItemSave.h"
#include "Savedata/include/UnionPokemonSave.h"
#include "Savedata/include/MiscSave.h"
#include "Savedata/include/ZukanSave.h"
#include "Savedata/include/EventWork.h"
#include "AppLib/include/Frame/AppFrameCellSuper.h"
#include "AppLib/include/Tool/app_tool_PaneListView.h"
#include "AppLib/include/Tool/AppToolItemEffect.h"
#include "AppLib/include/Sort/StringItem.h"
#include "AppLib/include/Sort/StringWaza.h"
// module
#include "App/Bag/include/BagAppParam.h"
#include "App/Bag/include/BagDrawListener.h"
#include "App/AppEvent/include/Bag/BagGamedata.h"


// 前方宣言
GFL_NAMESPACE_BEGIN(System)
class DeviceTurnWatcher;
GFL_NAMESPACE_END(System)

GFL_NAMESPACE_BEGIN(app)

GFL_NAMESPACE_BEGIN(util)
class Heap;
class AppRenderingManager;
GFL_NAMESPACE_END(util)

GFL_NAMESPACE_BEGIN(tool)
class PokeIcon;
class ItemIcon;
class MenuCursor;
class MenuWindow;
class AppCommonGrpIconData;
GFL_NAMESPACE_END(tool)

GFL_NAMESPACE_END(app)

class WordSetLoader;


GFL_NAMESPACE_BEGIN(app)
GFL_NAMESPACE_BEGIN(bag)

// 前方宣言
class BagDraw;
class BagPokemon;
class BagInfoField;
class BagLvupWindow;
class BagWazaSelect;
class BagSaleWindow;

//=============================================================================
/**
 * @class BagFrame
 * @brief バッグ画面フレームクラス
 * @date  2015.03.04
 */
//=============================================================================
class BagFrame
  : public applib::frame::CellSuper
  , public BagDrawListener
{
  GFL_FORBID_COPY_AND_ASSIGN(BagFrame);   // コピーコンストラクタ＋代入禁止

public:
  //! 復帰モード（バトル用）
  enum RecoverMode
  {
    RCV_USE = 0,  //!< つかう
    RCV_CANCEL,   //!< キャンセル
    RCV_END,      //!< 終了へ
  };

  //! デモモードのリクエスト
  enum DemoModeRequest
  {
    REQ_SELECT_BALL_POCKET = 0,   //!< 捕獲デモ用：ボールポケットを選択
    REQ_SELECT_ITEM_BALL,         //!< 捕獲デモ用：ボールを選択
  };


private:
  //! メニューID
  enum MenuID
  {
    MENU_ID_USE = 0,            //!< つかう
    MENU_ID_ON_GAKUSYUUSOUTI,   //!< オン（がくしゅうそうち）
    MENU_ID_OFF_GAKUSYUUSOUTI,  //!< オフ（がくしゅうそうち）

    MENU_ID_SET_POKEMON,        //!< もたせる

    MENU_ID_USE_IN_FREESPACE,   //!< フリースペースへ
    MENU_ID_USE_OUT_FREESPACE,  //!< もとのばしょへ（フリースペース）

    MENU_ID_SINGLE_USE,         //!< つかう（対象選択済み）
    MENU_ID_SINGLE_SET,         //!< もたせる（対象選択済み）

    MENU_ID_CATCH_USE,          //!< つかう（キャッチムーブ用）
    MENU_ID_CATCH_SET,          //!< もたせる（キャッチムーブ用）

    MENU_ID_SORT_TYPE,          //!< しゅるいじゅん（ソート）
    MENU_ID_SORT_NUMBER,        //!< ばんごうじゅん（ソート）
    MENU_ID_SORT_NAME,          //!< なまえじゅん（ソート）
    MENU_ID_SORT_NEW,           //!< New（ソート）

    MENU_ID_ZCUDE_CHECK,        //!< しらべる（ジガルデキューブ）
    MENU_ID_ZCUBE_FORM,         //!< すがたをかえる（ジガルデキューブ）
    MENU_ID_ZCUBE_WAZA,         //!< わざをおぼえる（ジガルデキューブ）

    MENU_ID_CANCEL,             //!< やめる

    MENU_ID_YES,                //!< はい
    MENU_ID_NO,                 //!< いいえ

    MENU_ID_ZCUBE_WAZA_1,       //!< 技１（ジガルデキューブ）
    MENU_ID_ZCUBE_WAZA_2,       //!< 技２（ジガルデキューブ）
    MENU_ID_ZCUBE_WAZA_3,       //!< 技３（ジガルデキューブ）
    MENU_ID_ZCUBE_WAZA_4,       //!< 技４（ジガルデキューブ）
    MENU_ID_ZCUBE_WAZA_5,       //!< 技５（ジガルデキューブ）
    MENU_ID_ZCUBE_WAZA_6,       //!< 技６（ジガルデキューブ）
    MENU_ID_ZCUBE_WAZA_7,       //!< 技７（ジガルデキューブ）

    MENU_ID_MAX                 //!< 最大数
  };

  static const u32 MENU_TABLE_MAX = 8;  //!< メニュー項目最大数

  //! アイテムアイコンID
  enum ItemIconID
  {
    ITEMICON_ID_INFO = 0,   //!< 上画面用
    ITEMICON_ID_CATCH,      //!< キャッチ用
    ITEMICON_ID_MAX,        //!< 最大数
  };

  //! ポケモン選択モード
  enum PokeSelectMode
  {
    POKESEL_MODE_NONE = 0,    //!< ポケモン選択モードじゃない
    POKESEL_MODE_BATTLE_USE,  //!< バトル時の対象選択
    POKESEL_MODE_MENU_USE,    //!< 道具を使用する対象を選択
    POKESEL_MODE_MENU_SET,    //!< 道具を持たせる対象を選択
    POKESEL_MODE_UNION,       //!< 合体対象を選択
  };

  //! フィールドポケットID
  static const u32 FieldPocketID[PlayData::POCKET_DATA_MAX];

  static const u32 ITEM_USE_DATA_MAX = 13;  //!< 道具使用データテーブル数

  //! 全体瀕死回復用ID
  enum AllDeathRcvID
  {
    ALL_DEATH_RECOVER_USE_FALSE = 0,  //!< 使用不可
    ALL_DEATH_RECOVER_USE_TRUE,       //!< 使用可
    ALL_DEATH_RECOVER_NOT,            //!< 全体瀕死回復アイテム以外
  };

  //! フォルムチェンジポケモン
  struct FORM_CHG_POKEMON
  {
    pml::pokepara::PokemonParam * pp; //!< ポケモンパラメータ
    u16	item;   //!< アイテム番号
    u16	pos;    //!< 並び位置
    bool is_moudoku;  //!< もうどくフラグ
  };
  //! フォルムチェンジ用ワーク
  struct FORM_CHG_WORK
  {
    FORM_CHG_POKEMON poke[2];   //!< ポケモンデータ
  };

  //! フォルムチェンジ呼び出しID
  enum FormChangeID
  {
    FORM_CHG_ID_ITEM_USE = 0,       //!< 道具使用
    FORM_CHG_ID_ITEM_SET,           //!< 持たせる
    FORM_CHG_ID_ITEM_CATCH_LIST,    //!< キャッチムーブ => リストへ
    FORM_CHG_ID_ITEM_CATCH_POKE,    //!< キャッチムーブ => 別のポケモンへ
  };

  static const s32 ITEM_NEW_RESET_COUNT = 2;        //!< Newフラグを落とすまでのカウント
  static const s32 START_ITEM_NEW_RESET_COUNT = 16; //!< Newフラグを落とすまでのカウント（バッグ画面開始時）

  static const u32 ZCUBE_WAZA_MAX = 5;  //!< ジガルデキューブの技数

  //! ポケモン分離時の技削除結果 @fix MMCat[441]
  enum SubUnionWazaResult
  {
    SUB_UNION_WAZA_DELETE = 0,  //!< 削除した 
    SUB_UNION_WAZA_NENRIKI,     //!< ねんりきをセット
    SUB_UNION_WAZA_NONE,        //!< それ以外
  };


public:
  //-----------------------------------------------------------------------------
  /**
   * @brief コンストラクタ
   */
  //-----------------------------------------------------------------------------
  BagFrame(void);

  //-----------------------------------------------------------------------------
  /**
   * @brief デストラクタ
   */
  //-----------------------------------------------------------------------------
  virtual ~BagFrame();

  //-----------------------------------------------------------------------------
  /**
   * @func    Setup
   * @brief   外部設定パラメータをセット
   * @date    2015.03.04
   *
   * @param   param             外部設定パラメータ
   * @parma   heap              ヒープ
   * @param   rendering_manager 描画マネージャー
   */
  //-----------------------------------------------------------------------------
  void Setup( APP_PARAM * param, app::util::Heap * heap, app::util::AppRenderingManager * rendering_manager );

  //-----------------------------------------------------------------------------
  /**
   * @func    InitFunc
   * @brief   フレーム初期化
   * @date    2015.03.04
   *
   * @return  applib::frame::Result
   */
  //-----------------------------------------------------------------------------
  virtual applib::frame::Result InitFunc(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    EndFunc
   * @brief   フレーム終了
   * @date    2015.03.04
   *
   * @return  applib::frame::Result
   */
  //-----------------------------------------------------------------------------
  virtual applib::frame::Result EndFunc(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    UpdateFunc
   * @brief   フレーム更新
   * @date    2015.03.04
   *
   * @return  applib::frame::Result
   */
  //-----------------------------------------------------------------------------
  virtual applib::frame::Result UpdateFunc(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DrawFunc
   * @brief   フレーム描画
   * @date    2015.03.04
   *
   * @param   no  描画先のディスプレイ番号
   */
  //-----------------------------------------------------------------------------
  virtual void DrawFunc( gfl2::gfx::CtrDisplayNo no );

  //-----------------------------------------------------------------------------
  /**
   * @func    IsDrawEnable
   * @brief   描画できる状態になった事を返すための関数
   * @date    2016.04.20
   *
   * @retval  true  = 描画可
   * @retval  false = 描画不可
   */
  //-----------------------------------------------------------------------------
  virtual bool IsDrawEnable(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    OnAction
   * @brief   入力リスナー
   * @date    2015.03.04
   *
   * @param   id  入力ID
   */
  //-----------------------------------------------------------------------------
  virtual void OnAction( u32 id );

  //--------------------------------------------------------------------------
  /**
   * @func    UpdateCursorItem
   * @brief   カーソルの指すアイテムが変更されたときのリスナー
   * @date    2015.03.04
   *
   * @param   item  道具データ
   */
  //--------------------------------------------------------------------------
  virtual void UpdateCursorItem( const Savedata::MyItem::ITEM_ST * item );

  //--------------------------------------------------------------------------
  /**
   * @func    SelectItem
   * @brief   アイテムが選択されたときのリスナー
   * @date    2015.03.04
   *
   * @param   item  道具データ
   */
  //--------------------------------------------------------------------------
  virtual void SelectItem( Savedata::MyItem::ITEM_ST * item );

  //--------------------------------------------------------------------------
  /**
   * @func    CatchItem
   * @brief   ペインリストの項目キャッチ時のリスナー
   * @date    2015.05.11
   *
   * @param   item  道具データ
   */
  //--------------------------------------------------------------------------
  virtual void CatchItem( Savedata::MyItem::ITEM_ST * item );

  //--------------------------------------------------------------------------
  /**
   * @func    IsStopUpdate
   * @brief   内部処理が一時停止しているか（バトル用）
   * @date    2015.04.23
   *
   * @retval  true  = 停止中
   * @retval  false = それ以外
   */
  //--------------------------------------------------------------------------
  bool IsStopUpdate(void);

  //--------------------------------------------------------------------------
  /**
   * @func    RecoverUpdate
   * @brief   外部から内部処理を復帰させる（バトル用）
   * @date    2015.04.23
   *
   * @param   mode  復帰モード
   */
  //--------------------------------------------------------------------------
  void RecoverUpdate( RecoverMode mode );

  //--------------------------------------------------------------------------
  /**
   * @func    ItemUse_ReturnField
   * @brief   道具使用処理：フィールド復帰アイテム
   * @date    2015.04.15
   *
   * @param   item  アイテム番号
   *
   * @return  0
   */
  //--------------------------------------------------------------------------
  int ItemUse_ReturnField( u16 item );

  //--------------------------------------------------------------------------
  /**
   * @func    ItemUse_Gakusyuusouti
   * @brief   道具使用処理：がくしゅうそうち
   * @date    2015.04.15
   *
   * @param   item  アイテム番号
   *
   * @return  0
   */
  //--------------------------------------------------------------------------
  int ItemUse_Gakusyuusouti( u16 item );

  //--------------------------------------------------------------------------
  /**
   * @func    ItemUse_Spray
   * @brief   道具使用処理：スプレー
   * @date    2015.04.15
   *
   * @param   item  アイテム番号
   *
   * @return  0
   */
  //--------------------------------------------------------------------------
  int ItemUse_Spray( u16 item );

  //--------------------------------------------------------------------------
  /**
   * @func    ItemUse_RotomPower
   * @brief   道具使用処理：ロトムパワー関連
   * @date    2017.03.23
   *
   * @param   item  アイテム番号
   *
   * @return  0
   */
  //--------------------------------------------------------------------------
  int ItemUse_RotomPower( u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    InitDemoMode
   * @brief   デモモードにする
   * @date    2015.06.25
   */
  //-----------------------------------------------------------------------------
  void InitDemoMode(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetDemoModeRequest
   * @brief   デモモードにする
   * @date    2015.06.25
   */
  //-----------------------------------------------------------------------------
  void SetDemoModeRequest( DemoModeRequest req );


private:
  //-----------------------------------------------------------------------------
  /**
   * @func    GetInputExculusiveKeyMode
   * @brief   UIViewのボタンアニメ中の処理モードを取得
   * @date    2016.02.18
   */
  //-----------------------------------------------------------------------------
  void GetInputExculusiveKeyMode(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetInputExculusiveKeyMode
   * @brief   UIViewのボタンアニメ中の処理モードを設定
   * @date    2016.02.18
   *
   * @param   flg   true = 排他制御ON
   */
  //-----------------------------------------------------------------------------
  void SetInputExculusiveKeyMode( bool flg );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetGameData
   * @brief   ゲームデータ取得
   * @date    2015.04.15
   */
  //-----------------------------------------------------------------------------
  void GetGameData(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    InitFadeIn
   * @brief   フェードイン初期設定
   * @date    2015.06.09
   */
  //-----------------------------------------------------------------------------
  void InitFadeIn(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetFadeIn
   * @brief   フェードイン開始
   * @date    2015.06.09
   */
  //-----------------------------------------------------------------------------
  void SetFadeIn(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetFadeOut
   * @brief   フェードアウト開始
   * @date    2015.06.12
   */
  //-----------------------------------------------------------------------------
  void SetFadeOut(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    IsFadeEnd
   * @brief   フェード終了チェック
   * @date    2015.06.12
   *
   * @retval  true  = 終了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool IsFadeEnd(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetEnd
   * @brief   終了設定
   * @date    2015.04.10
   *
   * @param   mode  終了モード
   * @param   item  選択されたアイテム
   * @param   waza  選択された技
   * @param   poke  選択されたポケモン位置
   * @param   pos   選択された技位置
   */
  //-----------------------------------------------------------------------------
  void SetEnd( EndMode mode, u32 item=ITEM_DUMMY_DATA, u32 waza=WAZANO_NULL, u32 poke=0, u32 pos=0 );

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateItemManager
   * @brief   アイテムマネージャ生成
   * @date    2015.06.25
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreateItemManager(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteItemManager
   * @brief   アイテムマネージャ削除
   * @date    2015.06.25
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeleteItemManager(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateItemTable
   * @brief   ポケットごとの道具テーブルを生成
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void CreateItemTable(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteItemTable
   * @brief   ポケットごとの道具テーブルを削除
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void DeleteItemTable(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    LoadLayoutResource
   * @brief   レイアウトリソース読み込み
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool LoadLayoutResource(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    UnloadLayoutResource
   * @brief   レイアウトリソース削除
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void UnloadLayoutResource(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    LoadMessage
   * @brief   メッセージ読み込み
   * @date    2015.06.17
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool LoadMessage(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    UnloadMessage
   * @brief   メッセージ削除
   * @date    2015.06.17
   */
  //-----------------------------------------------------------------------------
  void UnloadMessage(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreatePokeIcon
   * @brief   ポケモンアイコン生成
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreatePokeIcon(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeletePokeIcon
   * @brief   ポケモンアイコン削除
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeletePokeIcon(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateItemIcon
   * @brief   アイテムアイコン生成
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreateItemIcon(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteItemIcon
   * @brief   アイテムアイコン削除
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeleteItemIcon(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateCommonIcon
   * @brief   状態異常/タイプ/分類アイコン生成
   * @date    2015.07.02
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreateCommonIcon(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteCommonIcon
   * @brief   状態異常/タイプ/分類アイコン削除
   * @date    2015.07.02
   */
  //-----------------------------------------------------------------------------
  void DeleteCommonIcon(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    LoadFieldLayoutResource
   * @brief   フィールド関連のリソース読み込み
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool LoadFieldLayoutResource(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    UnloadFieldLayoutResource
   * @brief   フィールド関連のリソース削除
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void UnloadFieldLayoutResource(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateBagDraw
   * @brief   描画クラス生成
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreateBagDraw(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteBagDraw
   * @brief   描画クラス削除
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeleteBagDraw(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreatePokemonPlate
   * @brief   ポケモン関連クラス生成
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreatePokemonPlate(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeletePokemonPlate
   * @brief   ポケモン関連クラス削除
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeletePokemonPlate(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateFieldInfo
   * @brief   フィールド関連クラス生成
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void CreateFieldInfo(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteFieldInfo
   * @brief   フィールド関連クラス削除
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeleteFieldInfo(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateSaleWindow
   * @brief   売却ウィンドウ生成
   * @date    2015.07.17
   */
  //-----------------------------------------------------------------------------
  void CreateSaleWindow(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteSaleWindow
   * @brief   売却ウィンドウ削除
   * @date    2015.07.17
   */
  //-----------------------------------------------------------------------------
  void DeleteSaleWindow(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateLvupWindow
   * @brief   レベルアップウィンドウ生成
   * @date    2015.04.21
   */
  //-----------------------------------------------------------------------------
  void CreateLvupWindow(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteLvupWindow
   * @brief   レベルアップウィンドウ削除
   * @date    2015.04.21
   */
  //-----------------------------------------------------------------------------
  void DeleteLvupWindow(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateWazaSelect
   * @brief   技選択ウィンドウ生成
   * @date    2015.04.22
   */
  //-----------------------------------------------------------------------------
  void CreateWazaSelect(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteWazaSelect
   * @brief   技選択ウィンドウ削除
   * @date    2015.04.22
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeleteWazaSelect(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateMenuWindow
   * @brief   メニューウィンドウ生成
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void CreateMenuWindow(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteMenuWindow
   * @brief   メニューウィンドウ削除
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeleteMenuWindow(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateMenuCursor
   * @brief   メニューカーソル生成
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreateMenuCursor(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteMenuCursor
   * @brief   メニューカーソル削除
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeleteMenuCursor(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreatePaneList
   * @brief   ペインリスト生成
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void CreatePaneList(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeletePaneList
   * @brief   ペインリスト削除
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void DeletePaneList(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateSortData
   * @brief   ソートデータ生成
   * @date    2015.04.28
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreateSortData(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteSortData
   * @brief   ソートデータ削除
   * @date    2015.04.28
   */
  //-----------------------------------------------------------------------------
  void DeleteSortData(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateWordSetLoader
   * @brief   ワードセットローダー生成
   * @date    2015.06.25
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreateWordSetLoader(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteWordSetLoader
   * @brief   ワードセットローダー削除
   * @date    2015.06.25
   */
  //-----------------------------------------------------------------------------
  void DeleteWordSetLoader(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateDeviceTurnWatcher
   * @brief   本体逆さチェッククラス生成
   * @date    2015.12.15
   */
  //-----------------------------------------------------------------------------
  void CreateDeviceTurnWatcher(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteDeviceTurnWatcher
   * @brief   本体逆さチェッククラス削除
   * @date    2015.12.15
   */
  //-----------------------------------------------------------------------------
  void DeleteDeviceTurnWatcher(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    OpenMsgFile
   * @brief   メッセージファイルオープン
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool OpenMsgFile(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CloseMsgFile
   * @brief   メッセージファイルクローズ
   * @date    2015.04.10
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CloseMsgFile(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangeModeMenu
   * @brief   モード切り替え：メニューへ
   * @date    2015.04.29
   */
  //-----------------------------------------------------------------------------
  void ChangeModeMenu(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangeModePokemonSelect
   * @brief   モード切り替え：ポケモン選択へ
   * @date    2015.04.29
   *
   * @param   mode  選択モード
   * @param   pos   初期位置
   */
  //-----------------------------------------------------------------------------
  void ChangeModePokemonSelect( PokeSelectMode mode, u32 pos=0 );

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangeModeItemSelect
   * @brief   モード切り替え：道具選択へ
   * @date    2015.04.29
   */
  //-----------------------------------------------------------------------------
  void ChangeModeItemSelect(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangeModeMessage
   * @brief   モード切り替え：メッセージ処理へ
   * @date    2015.04.29
   */
  //-----------------------------------------------------------------------------
  void ChangeModeMessage(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangeModeItemChange
   * @brief   モード切り替え：道具入れ替えへ
   * @date    2015.04.30
   */
  //-----------------------------------------------------------------------------
  void ChangeModeItemChange(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangeModeItemCatchMove
   * @brief   モード切り替え：ポケモンの持ち物のキャッチムーブへ
   * @date    2015.05.01
   */
  //-----------------------------------------------------------------------------
  void ChangeModeItemCatchMove(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangeModeListItemCatch
   * @brief   モード切り替え：道具リストのキャッチムーブへ
   * @date    2015.05.12
   */
  //-----------------------------------------------------------------------------
  void ChangeModeListItemCatch(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqStart
   * @brief   アップデート：開始処理
   * @date    2015.04.13
   */
  //-----------------------------------------------------------------------------
  void Update_SeqStart(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqMessageWait
   * @brief   アップデート：メッセージ待ち
   * @date    2015.04.15
   */
  //-----------------------------------------------------------------------------
  void Update_SeqMessageWait(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqMessageWaitPokeSelect
   * @brief   アップデート：メッセージ待ち => ポケモン選択
   * @date    2015.04.17
   */
  //-----------------------------------------------------------------------------
  void Update_SeqMessageWaitPokeSelect(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqMessageWaitItemSub
   * @brief   アップデート：メッセージ待ち => 道具を減らす
   * @date    2016.03.07
   */
  //-----------------------------------------------------------------------------
  void Update_SeqMessageWaitItemSub(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqMessageWaitItemSubPokeSelect
   * @brief   アップデート：メッセージ待ち => 道具を減らす => ポケモン選択
   * @date    2016.03.07
   */
  //-----------------------------------------------------------------------------
  void Update_SeqMessageWaitItemSubPokeSelect(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqItemPokeSet
   * @brief   アップデート：ポケモンに道具を持たせる
   * @date    2015.04.15
   */
  //-----------------------------------------------------------------------------
  void Update_SeqItemPokeSet(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqHpRecover
   * @brief   アップデート：HP回復
   * @date    2015.04.21
   */
  //-----------------------------------------------------------------------------
  void Update_SeqHpRecover(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqAllDeathRecover
   * @brief   アップデート：全体瀕死回復
   * @date    2015.04.21
   */
  //-----------------------------------------------------------------------------
  void Update_SeqAllDeathRecover(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqLevelUp
   * @brief   アップデート：レベルアップ
   * @date    2015.04.21
   */
  //-----------------------------------------------------------------------------
  void Update_SeqLevelUp(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqWazaSelect
   * @brief   アップデート：技選択
   * @date    2015.04.22
   */
  //-----------------------------------------------------------------------------
  void Update_SeqWazaSelect(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqItemUseTokuseikapuseru
   * @brief   アップデート：特性カプセル使用
   * @date    2015.04.17
   */
  //-----------------------------------------------------------------------------
  void Update_SeqItemUseTokuseikapuseru(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqItemUseFormChange
   * @brief   アップデート：フォルムチェンジ
   * @date    2015.04.17
   */
  //-----------------------------------------------------------------------------
  void Update_SeqItemUseFormChange(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqItemUseBeads
   * @brief   アップデート：ビーズ使用
   * @date    2015.11.05
   */
  //-----------------------------------------------------------------------------
  void Update_SeqItemUseBeads(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqItemUseWazaMachine
   * @brief   アップデート：技マシン使用
   * @date    2015.04.20
   */
  //-----------------------------------------------------------------------------
  void Update_SeqItemUseWazaMachine(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqItemUseZCubeWaza
   * @brief   アップデート：ジガルデキューブ使用
   * @date    2015.11.30
   */
  //-----------------------------------------------------------------------------
  void Update_SeqItemUseZCubeWaza(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqWazaResult
   * @brief   アップデート：技忘れ画面から復帰
   * @date    2015.04.20
   */
  //-----------------------------------------------------------------------------
  void Update_SeqWazaResult(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqPokeItemMove
   * @brief   アップデート：ポケモンの持ち物移動
   * @date    2015.05.01
   */
  //-----------------------------------------------------------------------------
  void Update_SeqPokeItemMove(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqListItemMove
   * @brief   アップデート：リストの道具移動
   * @date    2015.05.12
   */
  //-----------------------------------------------------------------------------
  void Update_SeqListItemMove(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqBattleRecoverMode
   * @brief   アップデート：バトル用復帰処理
   * @date    2015.04.24
   */
  //-----------------------------------------------------------------------------
  void Update_SeqBattleRecoverMode(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqBattleItemMove
   * @brief   アップデート：バトル用リスト道具移動
   * @date    2015.05.13
   */
  //-----------------------------------------------------------------------------
  void Update_SeqBattleItemMove(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqSale
   * @brief   アップデート：道具売却
   * @date    2015.07.17
   */
  //-----------------------------------------------------------------------------
  void Update_SeqSale(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqWaitEnd
   * @brief   アップデート：終了待ち
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void Update_SeqWaitEnd(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    InitDisplay
   * @brief   画面表示初期化
   * @date    2015.04.13
   */
  //-----------------------------------------------------------------------------
  void InitDisplay(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    InitPaneList
   * @brief   ペインリスト初期化
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void InitPaneList(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangePocket
   * @brief   ポケット切り替え
   * @date    2015.04.10
   *
   * @param   new_page  新しいポケットのページ
   * @param   item      初期位置の道具
   * @param   list_pos  リスト位置
   */
  //-----------------------------------------------------------------------------
  void ChangePocket( u32 new_page, u32 item, u32 list_pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangePocketCatch
   * @brief   ポケット切り替え（キャッチムーブ時）
   * @date    2015.05.08
   *
   * @param   new_pocket  新しいポケット
   */
  //-----------------------------------------------------------------------------
  void ChangePocketCatch( u32 new_pocket );

  //-----------------------------------------------------------------------------
  /**
   * @func    MovePocket
   * @brief   ポケット切り替え
   * @date    2015.04.10
   *
   * @param   mv  切り替え方向
   */
  //-----------------------------------------------------------------------------
  void MovePocket( s32 mv );

  //-----------------------------------------------------------------------------
  /**
   * @func    UpdateItemIcon
   * @brief   アイテムアイコン更新（全体）
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void UpdateItemIcon(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    UpdateItemIcon
   * @brief   アイテムアイコン更新（個別）
   * @date    2015.04.10
   *
   * @param   id  アイコンID
   */
  //-----------------------------------------------------------------------------
  void UpdateItemIcon( ItemIconID id );

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangeItemIconRequest
   * @brief   アイテムアイコン切り替えリクエスト
   * @date    2015.04.10
   *
   * @param   item  アイテム番号
   * @param   icon  アイコンID
   */
  //-----------------------------------------------------------------------------
  void ChangeItemIconRequest( u32 item, ItemIconID icon );

  //-----------------------------------------------------------------------------
  /**
   * @func    MakeMenuTable
   * @brief   道具メニューテーブル生成
   * @date    2015.04.10
   *
   * @param   item  アイテム番号
   *
   * @return  項目数
   */
  //-----------------------------------------------------------------------------
  u32 MakeMenuTable( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    MakeCatchMoveMenuTable
   * @brief   道具メニューテーブル生成（キャッチ用）
   * @date    2015.05.12
   *
   * @param   item  アイテム番号
   *
   * @return  項目数
   */
  //-----------------------------------------------------------------------------
  u32 MakeCatchMoveMenuTable( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    MakeSingleMenuTable
   * @brief   道具メニューテーブル生成（単体モード用）
   * @date    2015.05.15
   *
   * @param   item  アイテム番号
   *
   * @return  項目数
   */
  //-----------------------------------------------------------------------------
  u32 MakeSingleMenuTable( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    MakeSortMenuTable
   * @brief   ソートメニューテーブル生成
   * @date    2015.04.10
   *
   * @return  項目数
   */
  //-----------------------------------------------------------------------------
  u32 MakeSortMenuTable(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MakeYesNoMenuTable
   * @brief   "はい・いいえ"生成
   * @date    2015.04.23
   *
   * @return  項目数
   */
  //-----------------------------------------------------------------------------
  u32 MakeYesNoMenuTable(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MakeZCubeMenuTable
   * @brief   ジガルデキューブメニューテーブル生成
   * @date    2015.11.30
   *
   * @param   item  アイテム番号
   *
   * @return  項目数
   */
  //-----------------------------------------------------------------------------
  u32 MakeZCubeMenuTable(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    StartMenuWindow
   * @brief   メニュー開始
   * @date    2015.04.10
   *
   * @param   cnt       項目数
   * @param   is_yesno  true = "はい・いいえ"メニュー
   */
  //-----------------------------------------------------------------------------
  void StartMenuWindow( u32 cnt, bool is_yesno=false );

  //-----------------------------------------------------------------------------
  /**
   * @func    SelectMenu
   * @brief   メニュー決定処理
   * @date    2015.04.10
   *
   * @param   id  選択された項目
   */
  //-----------------------------------------------------------------------------
  void SelectMenu( u32 id );

  //-----------------------------------------------------------------------------
  /**
   * @func    IsPokeSetItem
   * @brief   持たせられるアイテムか
   * @date    2015.04.03
   *
   * @param   item  アイテム番号
   *
   * @retval  true  = 可
   * @retval  false = 不可
   */
  //-----------------------------------------------------------------------------
  bool IsPokeSetItem( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetFieldPocketID
   * @brief   バッグ内のポケットの並びからセーブデータのポケット番号を取得
   * @date    2015.04.10
   *
   * @param   pos   ポケットの並び位置
   *
   * @return  セーブデータのポケット番号
   */
  //-----------------------------------------------------------------------------
  u32 GetFieldPocketID( u32 pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetFieldPocketNum
   * @brief   セーブデータのポケット番号からバッグ内のポケットの並びを取得
   * @date    2015.04.13
   *
   * @param   pos   セーブデータのポケット番号
   *
   * @return  ポケットの並び位置
   */
  //-----------------------------------------------------------------------------
  u32 GetFieldPocketNum( u32 id );

  //-----------------------------------------------------------------------------
  /**
   * @func    SetSortMenu
   * @brief   ソートメニューをセット
   * @date    2015.04.10
   */
  //-----------------------------------------------------------------------------
  void SetSortMenu(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ChangePokeSelectMode
   * @brief   ポケモン選択モード切り替え
   * @date    2015.04.13
   *
   * @param   flg   true = 選択中へ, false = 非選択へ
   * @param   mode  選択モード
   * @param   pos   並び位置
   */
  //-----------------------------------------------------------------------------
  void ChangePokeSelectMode( bool flg, PokeSelectMode mode, u32 pos=0 );

  //-----------------------------------------------------------------------------
  /**
   * @func    SelectPokemon
   * @brief   ポケモン選択
   * @date    2015.04.13
   *
   * @param   pos   選択位置
   */
  //-----------------------------------------------------------------------------
  void SelectPokemon( u32 pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    SetPocketData
   * @brief   ポケットデータをセット
   * @date    2015.04.14
   *
   * @param   pocket  ポケット位置
   */
  //-----------------------------------------------------------------------------
  void SetPocketData( u32 pocket );

  //-----------------------------------------------------------------------------
  /**
   * @func    PokeItemUseBattle
   * @brief   道具使用（バトル用）
   * @date    2015.04.24
   *
   * @param   pos   ポケモン位置
   */
  //-----------------------------------------------------------------------------
  void PokeItemUseBattle( u32 pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuUse
   * @brief   メニュー：つかう
   * @date    2015.04.15
   */
  //-----------------------------------------------------------------------------
  void MenuUse(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuPokeSet
   * @brief   メニュー：もたせる
   * @date    2015.04.15
   */
  //-----------------------------------------------------------------------------
  void MenuPokeSet(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    PokeItemUse
   * @brief   ポケモンに道具を使う
   * @date    2015.04.17
   *
   * @param   pos       ポケモンの位置
   * @param   item      使用するアイテムデータ
   * @param   is_catch  true = キャッチ操作
   */
  //-----------------------------------------------------------------------------
  void PokeItemUse( u32 pos, const Savedata::MyItem::ITEM_ST * item, bool is_catch );

  //-----------------------------------------------------------------------------
  /**
   * @func    PokeItemSet
   * @brief   ポケモンに道具を持たせる
   * @date    2015.04.15
   *
   * @param   pos       ポケモンの位置
   * @param   is_catch  true = キャッチ操作
   */
  //-----------------------------------------------------------------------------
  void PokeItemSet( u32 pos, bool is_catch );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetListPosItem
   * @brief   カーソル位置のアイテムデータを取得
   * @date    2015.04.15
   *
   * @return  アイテムデータ
   */
  //-----------------------------------------------------------------------------
  Savedata::MyItem::ITEM_ST * GetListPosItem(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    GetListPosItemID
   * @brief   カーソル位置のアイテム番号を取得
   * @date    2015.12.26
   *
   * @return  アイテム番号
   */
  //-----------------------------------------------------------------------------
  u32 GetListPosItemID(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SelectCancel
   * @brief   戻るボタンを選択
   * @date    2015.04.15
   */
  //-----------------------------------------------------------------------------
  void SelectCancel(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetPokemonItem
   * @brief   ポケモンに道具をセット
   * @date    2015.04.15
   *
   * @param   item_id   アイテム番号
   */
  //-----------------------------------------------------------------------------
  void SetPokemonItem( u32 item_id );

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckSetItemFormChange
   * @brief   フォルムチェンジが発生するか
   * @date    2015.05.08
   *
   * @param   pos       ポケモン位置
   * @param   pp        ポケモンパラメータ
   * @param   item_id   アイテム番号
   */
  //-----------------------------------------------------------------------------
  bool CheckSetItemFormChange( u32 pos, pml::pokepara::PokemonParam * pp, u32 item_id );

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckAllDeathRecoverItemUse
   * @brief   全員瀕死回復アイテム使用チェック
   * @date    2015.04.15
   *
   * @param   item  アイテム番号
   *
   * @retval  ALL_DEATH_ITEM_USE_TRUE  = 使用可
   * @retval  ALL_DEATH_ITEM_USE_FALSE = 使用不可
   * @retval  ALL_DEATH_ITEM_NOT       = 全員瀕死回復アイテムではない
   */
  //-----------------------------------------------------------------------------
  AllDeathRcvID CheckAllDeathRecoverItemUse( u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetAllDeathRecoverUsePos
   * @brief   全ポケモンに対しての瀕死回復アイテム使用チェック
   * @date    2015.04.15
   *
   * @param   item  アイテム番号
   *
   * @retval  -1 = 瀕死のポケモンなし
   * @retval  -1 != 瀕死のポケモン位置
   */
  //-----------------------------------------------------------------------------
  int GetAllDeathRecoverUsePos( u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetUseCheckItemIndex
   * @brief   道具使用テーブルのインデックスを取得
   * @date    2015.04.15
   *
   * @param   item  アイテム番号
   *
   * @retval  ITEM_USE_DATA_MAX = テーブルにデータなし
   * @retval  ITEM_USE_DATA_MAX != 対応したデータのインデックス
   */
  //-----------------------------------------------------------------------------
  u32 GetUseCheckItemIndex( u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseSub
   * @brief   道具使用後の消費処理
   * @date    2015.04.15
   *
   * @param   item  アイテム番号
   */
  //-----------------------------------------------------------------------------
  void ItemUseSub( u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckItemUseHealing
   * @brief   回復アイテム使用チェック
   * @date    2015.04.17
   *
   * @param   item      アイテム番号
   * @param   pp        ポケモンパラメータ
   * @param   poke_pos  ポケモン位置
   * @param   is_catch  true = キャッチ操作
   */
  //-----------------------------------------------------------------------------
  void CheckItemUseHealing( u32 item, pml::pokepara::PokemonParam * pp, u32 poke_pos, bool is_catch );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseHealing
   * @brief   回復アイテム使用
   * @date    2015.04.17
   *
   * @param   item      アイテム番号
   * @param   pp        ポケモンパラメータ
   * @param   poke_pos  ポケモン位置
   * @param   waza_pos  技位置
   * @param   is_catch  true = キャッチ操作
   */
  //-----------------------------------------------------------------------------
  void ItemUseHealing( u32 item, pml::pokepara::PokemonParam * pp, u32 poke_pos, u32 waza_pos, bool is_catch );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseWazaMachine
   * @brief   技マシン使用
   * @date    2015.04.20
   *
   * @param   item      アイテム番号
   * @param   pp        ポケモンパラメータ
   * @param   poke_pos  ポケモン位置
   * @param   is_catch  true = キャッチ操作
   */
  //-----------------------------------------------------------------------------
  void ItemUseWazaMachine( u32 item, pml::pokepara::PokemonParam * pp, u32 poke_pos, bool is_catch );

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckItemUseEvolution
   * @brief   進化アイテム使用チェック
   * @date    2015.04.17
   *
   * @param   item  アイテム番号
   * @param   pp    ポケモンパラメータ
   *
   * @retval  true  = 使用可
   * @retval  false = 使用不可
   */
  //-----------------------------------------------------------------------------
  bool CheckItemUseEvolution( u32 item, const pml::pokepara::PokemonParam * pp );

  //-----------------------------------------------------------------------------
  /**
   * @func    RecoverEvolutionItem
   * @brief   進化画面からの復帰処理
   * @date    2015.04.21
   */
  //-----------------------------------------------------------------------------
  void RecoverEvolutionItem(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckItemUseTokusei
   * @brief   特性変更アイテム使用チェック
   * @date    2015.04.17
   *
   * @param   item  アイテム番号
   *
   * @retval  true  = 使用可
   * @retval  false = 使用不可
   */
  //-----------------------------------------------------------------------------
  bool CheckItemUseTokusei( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseTokusei
   * @brief   特性変更アイテム使用
   * @date    2015.04.17
   *
   * @param   pp  ポケモンパラメータ
   */
  //-----------------------------------------------------------------------------
  void ItemUseTokusei( pml::pokepara::PokemonParam * pp );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseBeads
   * @brief   ビーズ使用
   * @date    2015.11.05
   *
   * @param   item      アイテム番号
   * @param   pp        ポケモンパラメータ
   * @param   is_catch  true = キャッチ操作
   */
  //-----------------------------------------------------------------------------
  void ItemUseBeads( u32 item, pml::pokepara::PokemonParam * pp, bool is_catch );

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckItemUseZCube
   * @brief   ジガルデキューブ使用チェック
   * @date    2015.11.30
   *
   * @param   item  アイテム番号
   *
   * @retval  true  = 可
   * @retval  false = 不可
   */
  //-----------------------------------------------------------------------------
  bool CheckItemUseZCube( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseZCube
   * @brief   ジガルデキューブ使用
   * @date    2015.11.30
   *
   * @param   item      アイテムデータ
   * @param   pp        ポケモンパラメータ
   * @param   is_catch  true = キャッチ操作
   */
  //-----------------------------------------------------------------------------
  void ItemUseZCube( const Savedata::MyItem::ITEM_ST * item, pml::pokepara::PokemonParam * pp, bool is_catch );

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuZCubeCheck
   * @brief   ジガルデキューブ用メニュー"しらべる"
   * @date    2015.11.30
   */
  //-----------------------------------------------------------------------------
  void MenuZCubeCheck(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuZCubeForm
   * @brief   ジガルデキューブ用メニュー"すがたをかえる"
   * @date    2015.11.30
   */
  //-----------------------------------------------------------------------------
  void MenuZCubeForm(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuZCubeWaza
   * @brief   ジガルデキューブ用メニュー"わざをおぼえる"
   * @date    2015.11.30
   */
  //-----------------------------------------------------------------------------
  void MenuZCubeWaza(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuZCubeWazaSelect
   * @brief   ジガルデキューブ用技選択
   * @date    2015.11.30
   *
   * @param   index   選択位置
   */
  //-----------------------------------------------------------------------------
  void MenuZCubeWazaSelect( u32 index );

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckItemUseFormChange
   * @brief   道具使用時のフォルムチェンジチェック
   * @date    2015.04.17
   *
   * @param   item  アイテム番号
   * @param   pp    ポケモンパラメータ
   *
   * @retval  true  = フォルムチェンジ
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CheckItemUseFormChange( u32 item, const pml::pokepara::PokemonParam * pp );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetMitsusuiForm
   * @brief   道具に対応したミツスイのフォルムを取得
   * @date    2015.12.25
   *
   * @param   item  アイテム番号
   *
   * @return  フォルム番号
   */
  //-----------------------------------------------------------------------------
  FormNo GetMitsusuiForm( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseFormChange
   * @brief   道具使用時のフォルムチェンジ
   * @date    2015.04.17
   *
   * @param   item      アイテム番号
   * @param   pp        ポケモンパラメータ
   * @param   poke_pos  ポケモン位置
   * @param   is_catch  true = キャッチ操作
   */
  //-----------------------------------------------------------------------------
  void ItemUseFormChange( u32 item, const pml::pokepara::PokemonParam * pp, u32 poke_pos, bool is_catch );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseFormChange_UnionCombine
   * @brief   道具使用時の合体
   * @date    2016.12.22
   *
   * @param   item      アイテム番号
   * @param   pp        ポケモンパラメータ
   * @param   poke_pos  ポケモン位置
   * @param   is_catch  true = キャッチ操作
   * @param   mons      ポケモン番号
   * @param   form      フォルム番号
   */
  //-----------------------------------------------------------------------------
  void ItemUseFormChange_UnionCombine( u32 item, const pml::pokepara::PokemonParam * pp, u32 poke_pos, bool is_catch, MonsNo mons, FormNo form );

  //-----------------------------------------------------------------------------
  /**
   * @func    ItemUseFormChange_UnionSeparate
   * @brief   道具使用時の合体解除
   * @date    2016.12.22
   *
   * @param   item      アイテム番号
   * @param   poke_pos  ポケモン位置
   */
  //-----------------------------------------------------------------------------
  void ItemUseFormChange_UnionSeparate( u32 item, u32 poke_pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    SetFormChangeWork
   * @brief   フォルムチェンジワーク設定
   * @date    2015.04.17
   *
   * @param   pos1    １匹目の位置
   * @param   item1   １匹目に影響する道具
   * @param   pos2    ２匹目の位置
   * @param   item2   ２匹目に影響する道具
   */
  //-----------------------------------------------------------------------------
  void SetFormChangeWork( u32 pos1, u32 item1, u32 pos2=pml::PokeParty::MAX_MEMBERS, u32 item2=0 );

  //-----------------------------------------------------------------------------
  /**
   * @func    FormChangeCore
   * @brief   フォルムチェンジ処理
   * @date    2015.04.17
   *
   * @param   poke  フォルムチェンジポケモン
   */
  //-----------------------------------------------------------------------------
  void FormChangeCore( const FORM_CHG_POKEMON * poke );

  //-----------------------------------------------------------------------------
  /**
   * @func    FormChangeCore_Combine
   * @brief   合体処理
   * @date    2016.12.22
   *
   * @param   id        データID
   * @param   poke      合体元のポケモン
   * @param   new_form  合体後後のフォルム
   * @param   pp2       合体対象のポケモン
   * @param   poke2     合体対象のポケモン位置
   */
  //-----------------------------------------------------------------------------
  void FormChangeCore_Combine(
        Savedata::UnionPokemon::PokemonID id, const FORM_CHG_POKEMON * poke, FormNo new_form, pml::pokepara::PokemonParam * pp2, u32 pos2 );

  //-----------------------------------------------------------------------------
  /**
   * @func    FormChangeCore_Separate
   * @brief   合体解除処理
   * @date    2016.12.22
   *
   * @param   id        データID
   * @param   poke      分離元のポケモン
   * @param   new_form  分離後のフォルム
   */
  //-----------------------------------------------------------------------------
  void FormChangeCore_Separate( Savedata::UnionPokemon::PokemonID id, const FORM_CHG_POKEMON * poke, FormNo new_form );

  //-----------------------------------------------------------------------------
  /**
   * @func    PokeItemUnion
   * @brief   ポケモン合体処理
   * @date    2015.04.17
   *
   * @param   pos   合体させるポケモンの位置
   * @param   item  使用するアイテムデータ
   */
  //-----------------------------------------------------------------------------
  void PokeItemUnion( u32 pos, const Savedata::MyItem::ITEM_ST * item );

  //-----------------------------------------------------------------------------
  /**
   * @func    IsPokeItemUnionDataNull
   * @brief   ポケモン合体処理：退避先データのNULLチェック
   * @date    2016.12.22
   *
   * @param   id    データID
   * @param   pos   合体させるポケモンの位置
   *
   * @retval  true  = NULLデータ
   * @retval  false = それ以外
   *
   * @note  falseの場合はメッセージがセットされる
   */
  //-----------------------------------------------------------------------------
  bool IsPokeItemUnionDataNull( Savedata::UnionPokemon::PokemonID id, u32 pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    IsPokeItemUnionMonsNo
   * @brief   ポケモン合体処理：合体対象のポケモン番号チェック
   * @date    2016.12.22
   *
   * @param   pp    合体対象のポケモン
   * @param   mons  合体可能なポケモン番号
   * @param   pos   合体させるポケモンの位置
   *
   * @retval  true  = 合体可能なポケモン
   * @retval  false = それ以外
   *
   * @note  trueの場合はメッセージがセットされる
   */
  //-----------------------------------------------------------------------------
  bool IsPokeItemUnionMonsNo( pml::pokepara::PokemonParam * pp, MonsNo mons, u32 pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    SwapMyItem
   * @brief   アイテムを入れ替える（アイテム番号を変更する）
   * @date    2015.04.17
   *
   * @param   item  アイテム番号
   *
   * @li  "いでんしのくさび(合体用)"と"いでんしのくさび(分離用)"を変更する場合に使用
   */
  //-----------------------------------------------------------------------------
  void SwapMyItem( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    SubItem
   * @brief   道具を減らす
   * @date    2015.04.17
   *
   * @param   item_id   アイテム番号
   * @param   sub       減らす個数
   */
  //-----------------------------------------------------------------------------
  void SubItem( u16 item_id, u16 sub );

  //--------------------------------------------------------------------------
  /**
   * @func    StopUpdate
   * @brief   内部処理を一時停止（バトル用）
   * @date    2015.04.23
   *
   * @param   item  道具データ
   */
  //--------------------------------------------------------------------------
  void StopUpdate( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuAddFreeSpace
   * @brief   メニュー"フリースペースへ"
   * @date    2015.04.24
   */
  //-----------------------------------------------------------------------------
  void MenuAddFreeSpace(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuSubFreeSpace
   * @brief   メニュー"もとのばしょへ（フリースペース）"
   * @date    2015.04.24
   */
  //-----------------------------------------------------------------------------
  void MenuSubFreeSpace(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetVisibleMenuCursor
   * @brief   メニューカーソル表示切り替え
   * @date    2015.04.24
   *
   * @param   flg   true = 表示, false = 非表示
   */
  //-----------------------------------------------------------------------------
  void SetVisibleMenuCursor( bool flg );

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuSort
   * @brief   ソートメニュー処理（全体）
   * @date    2015.04.27
   *
   * @param   msg_id  メッセージID
   */
  //-----------------------------------------------------------------------------
  void MenuSort( u32 msg_id );

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuSortType
   * @brief   ソートメニュー処理（種類順）
   * @date    2015.04.27
   */
  //-----------------------------------------------------------------------------
  void MenuSortType(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuSortName
   * @brief   ソートメニュー処理（名前順）
   * @date    2015.04.27
   */
  //-----------------------------------------------------------------------------
  void MenuSortName(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuSortNew
   * @brief   ソートメニュー処理（New）
   * @date    2015.04.27
   */
  //-----------------------------------------------------------------------------
  void MenuSortNew(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SortType
   * @brief   ソート処理（種類順）
   * @date    2015.04.27
   */
  //-----------------------------------------------------------------------------
  void SortType(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SortName
   * @brief   ソート処理（名前順）
   * @date    2015.04.27
   */
  //-----------------------------------------------------------------------------
  void SortName(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SortNew
   * @brief   ソート処理（New）
   * @date    2015.04.27
   */
  //-----------------------------------------------------------------------------
  void SortNew(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetCountNew
   * @brief   ポケット内の新規アイテム数を設定
   * @date    2015.04.28
   *
   * @param   pocket  ポケット
   */
  //-----------------------------------------------------------------------------
  void SetCountNew( u32 pocket );

  //-----------------------------------------------------------------------------
  /**
   * @func    UpdatePocketNewIcon
   * @brief   Newアイコン表示更新処理
   * @date    2015.04.28
   */
  //-----------------------------------------------------------------------------
  void UpdatePocketNewIcon(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ResetNewItemFlag
   * @brief   アイテムの新規フラグを落とす
   * @date    2015.04.30
   *
   * @param   item  アイテムデータ
   */
  //-----------------------------------------------------------------------------
  void ResetNewItemFlag( Savedata::MyItem::ITEM_ST * item );

  //-----------------------------------------------------------------------------
  /**
   * @func    StartItemChange
   * @brief   リストの道具入れ替え開始
   * @date    2015.04.30
   */
  //-----------------------------------------------------------------------------
  void StartItemChange(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    EndItemChange
   * @brief   リストの道具入れ替え終了
   * @date    2015.04.30
   *
   * @param   flg         true = 実行, false = キャンセル
   * @param   is_play_se  true = SE再生
   */
  //-----------------------------------------------------------------------------
  void EndItemChange( bool flg, bool is_play_se );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetPokemonItem
   * @brief   ポケモンの持ち物を取得開始
   * @date    2015.05.01
   */
  //-----------------------------------------------------------------------------
  void GetPokemonItem(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    PutPokemonItem
   * @brief   取得中の道具をポケモンに持たせる
   * @date    2015.05.01
   */
  //-----------------------------------------------------------------------------
  void PutPokemonItem(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    PokeItemMoveSub
   * @brief   道具キャッチムーブ処理
   * @date    2015.05.08
   */
  //-----------------------------------------------------------------------------
  void PokeItemMoveSub(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ResetPocketItemTable
   * @brief   指定アイテムのポケットのテーブルを再設定
   * @date    2015.05.08
   *
   * @param   item  アイテムID
   */
  //-----------------------------------------------------------------------------
  void ResetPocketItemTable( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    PutListItem
   * @brief   リストからキャッチした道具の配置
   * @date    2015.05.12
   *
   * @retval  true  = 次の処理へ
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool PutListItem(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    PutListItemNormal
   * @brief   リストからキャッチした道具の配置（通常）
   * @date    2015.05.13
   *
   * @retval  true  = 次の処理へ
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool PutListItemNormal(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    PutListItemBattle
   * @brief   リストからキャッチした道具の配置（バトル用）
   * @date    2015.05.13
   *
   * @retval  true  = 次の処理へ
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  void PutListItemBattle(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    ResetCatchMoveItemList
   * @brief   リストからキャッチした道具の配置後のリスト再設定
   * @date    2015.05.12
   */
  //-----------------------------------------------------------------------------
  void ResetCatchMoveItemList(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckCatchItemUse
   * @brief   キャッチした道具の使用チェック
   * @date    2015.05.12
   *
   * @retval  true  = 可
   * @retval  false = 不可
   */
  //-----------------------------------------------------------------------------
  bool CheckCatchItemUse(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    GetCatchListItem
   * @brief   リストからキャッチしたアイテムのデータを取得
   * @date    2015.05.12
   *
   * @return  アイテムデータ
   */
  //-----------------------------------------------------------------------------
  Savedata::MyItem::ITEM_ST * GetCatchListItem(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuCatchUse
   * @brief   キャッチムーブ用メニュー"つかう"
   * @date    2015.05.12
   */
  //-----------------------------------------------------------------------------
  void MenuCatchUse(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuCatchSet
   * @brief   キャッチムーブ用メニュー"もたせる"
   * @date    2015.05.12
   */
  //-----------------------------------------------------------------------------
  void MenuCatchSet(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    SetSubSeq_MsgWaitItemSub
   * @brief   メッセージ後、道具を減らす処理へ
   * @date    2016.03.07
   *
   * @param   item  アイテム番号
   */
  //-----------------------------------------------------------------------------
  void SetSubSeq_MsgWaitItemSub( u32 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    SetSubSeq_MsgWaitItemSubPokeSelect
   * @brief   メッセージ後、道具を減らしてポケモン選択へ
   * @date    2016.03.07
   *
   * @param   item  アイテム番号
   * @param   pos   ポケモン位置
   */
  //-----------------------------------------------------------------------------
  void SetSubSeq_MsgWaitItemSubPokeSelect( u32 item, u32 pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    SetSubSeq_MsgWaitPokeSelect
   * @brief   メッセージ後、ポケモン選択へ
   * @date    2015.05.13
   *
   * @param   pos   ポケモン位置
   */
  //-----------------------------------------------------------------------------
  void SetSubSeq_MsgWaitPokeSelect( u32 pos );

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuSingleUse
   * @brief   単体モード用メニュー"つかう"
   * @date    2015.05.15
   */
  //-----------------------------------------------------------------------------
  void MenuSingleUse(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    MenuSingleSet
   * @brief   単体モード用メニュー"もたせる"
   * @date    2015.05.15
   */
  //-----------------------------------------------------------------------------
  void MenuSingleSet(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    GetPrice
   * @brief   売値取得
   * @date    2015.07.17
   *
   * @param   item  アイテムデータ
   *
   * @return  売値
   */
  //-----------------------------------------------------------------------------
  u32 GetPrice( const Savedata::MyItem::ITEM_ST * item );

  //-----------------------------------------------------------------------------
  /**
   * @func    SelectSaleItem
   * @brief   売却アイテム選択
   * @date    2015.07.17
   *
   * @param   item  アイテムデータ
   */
  //-----------------------------------------------------------------------------
  void SelectSaleItem( Savedata::MyItem::ITEM_ST * item );

  //-----------------------------------------------------------------------------
  /**
   * @func    Update_SeqDemoMode
   * @brief   デモモード用更新処理
   * @date    2015.06.25
   */
  //-----------------------------------------------------------------------------
  void Update_SeqDemoMode(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    IsBeadsPocket
   * @brief   ビーズポケットを表示するか
   * @date    2016.01.13
   *
   * @retval  true  = 表示
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool IsBeadsPocket(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    IsRotoponPocket
   * @brief   ロトポンポケットを表示するか
   * @date    2017.02.01
   *
   * @retval  true  = 表示
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool IsRotoponPocket(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CheckZigarudeCore
   * @brief   ジガルデコアを取得したかをチェック
   * @date    2016.01.21
   *
   * @param   id  コアのID
   *
   * @retval  true  = した
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CheckZigarudeCore( u32 id );

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateEffect
   * @brief   エフェクト管理クラス生成
   * @date    2016.01.19
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool CreateEffect(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    DeleteEffect
   * @brief   エフェクト管理クラス削除
   * @date    2016.01.19
   *
   * @retval  true  = 完了
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool DeleteEffect(void);

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateItemEffect
   * @brief   道具関連のエフェクトを生成
   * @date    2016.01.19
   *
   * @param   poke_pos    ポケモン位置
   * @param   eff_index   エフェクトのインデックス
   * @param   type        エフェクトタイプ
   */
  //-----------------------------------------------------------------------------
  void CreateItemEffect( u32 poke_pos, u32 eff_index, App::Tool::ItemEffect::Type type );

  //-----------------------------------------------------------------------------
  /**
   * @func    CreateFormChangeEffect
   * @brief   フォルムチェンジ関連のエフェクトを生成
   * @date    2016.02.01
   *
   * @param   pp          ポケモンデータ
   * @param   item        アイテム番号
   * @param   poke_pos    ポケモン位置
   * @param   eff_index   エフェクトのインデックス
   */
  //-----------------------------------------------------------------------------
  void CreateFormChangeEffect( const pml::pokepara::PokemonParam * pp, u32 item, u32 poke_pos, u32 eff_index );

  //-----------------------------------------------------------------------------
  /**
   * @func    GetUnionWaza
   * @brief   合体/分離時に変化させる技を取得
   * @date    2017.01.19
   *
   * @param   item  アイテム番号
   *
   * @return  アイテムに対応した技
   */
  //-----------------------------------------------------------------------------
  WazaNo BagFrame::GetUnionWaza( u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    AddUnionWaza
   * @brief   合体時の技追加
   * @date    2017.01.19
   *
   * @param   pp    ポケモンデータ
   * @param   item  アイテム番号
   *
   * @retval  true  = 追加した
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool AddUnionWaza( pml::pokepara::PokemonParam * pp, u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    SubUnionWaza
   * @brief   分離時の技削除
   * @date    2017.01.19
   *
   * @param   pp    ポケモンデータ
   * @param   item  アイテム番号
   *
   * @return  処理結果
   */
  //-----------------------------------------------------------------------------
  SubUnionWazaResult SubUnionWaza( pml::pokepara::PokemonParam * pp, u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    IsNekurozumaCombineItem
   * @brief   ネクロズマ用の合体アイテムか
   * @date    2017.01.19
   *
   * @param   item  アイテム番号
   *
   * @retval  true  = 合体アイテム
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool IsNekurozumaCombineItem( u16 item );

  //-----------------------------------------------------------------------------
  /**
   * @func    IsNekurozumaSeparateItem
   * @brief   ネクロズマ用の分離アイテムか
   * @date    2017.01.19
   *
   * @param   item  アイテム番号
   *
   * @retval  true  = 分離アイテム
   * @retval  false = それ以外
   */
  //-----------------------------------------------------------------------------
  bool IsNekurozumaSeparateItem( u16 item );

//  void InitPokeIcon(void);


private:
  itemman::ITEM_MANAGER * m_pItemManager;   //!< アイテムマネージャ

  void * m_pLytResBuff;       //!< レイアウトリソースバッファ
  void * m_pMsgBuff;          //!< メッセージリソースバッファ
  APP_PARAM * m_appParam;     //!< 外部設定パラメータ
  app::util::Heap * m_heap;   //!< ヒープ
  app::util::AppRenderingManager * m_renderingManager;  //!< 描画マネージャ

  GameSys::GameManager * m_gameManager;     //!< ゲームマネージャ
  GameSys::GameData * m_gameData;           //!< ゲームデータ
  Savedata::MyItem * m_myItem;              //!< 手持ちアイテム
  Savedata::UnionPokemon * m_unionPokemon;  //!< 合体ポケモンセーブデータ
  Savedata::Misc * m_misc;                  //!< 未分類セーブデータ
  Savedata::ZukanData * m_zukan;            //!< 図鑑セーブデータ
  Field::EventWork * m_eventWork;           //!< イベントワーク
  PlayData * m_playData;                    //!< バッグ画面ゲームデータ
  u32 m_placeLabelID;                       //!< 地名ID

  app::tool::PokeIcon * m_pPokeIcon;    //!< ポケモンアイコン

  app::tool::ItemIcon * m_pItemIcon;    //!< アイテムアイコン
  u16 m_itemIconReq[ITEMICON_ID_MAX];   //!< アイテムアイコン書き換えリクエスト
  u16 m_itemIconLoad[ITEMICON_ID_MAX];  //!< 読み込み中のアイテムアイコン
  u16 m_itemIconSeq[ITEMICON_ID_MAX];   //!< アイテムアイコン書き換えシーケンス

  s32 m_pocket;   //!< 参照中のポケット番号

  BagDraw * m_pDraw;  //!< 描画クラス

  u16 m_mainSeq;  //!< メインシーケンス
  u16 m_subSeq;   //!< サブシーケンス

  u32 m_rcvPokeSelectPos;   //!< 選択したポケモン位置

  BagPokemon * m_pBagPokemon;   //!< ポケモン関連クラス

  BagInfoField * m_pInfoField;    //!< フィールドバッグ関連クラス
  void * m_pFieldLytResBuff;      //!< フィールドバッグ関連レイアウトリソースバッファ
  void * m_pFieldItemInfoBuff;    //!< 道具説明リソースバッファ

  BagLvupWindow * m_pLvupWindow;  //!< レベルアップウィンドウクラス
  BagWazaSelect * m_pWazaSelect;  //!< 技選択ウィンドウクラス
  BagSaleWindow * m_pSaleWindow;  //!< 売却ウィンドウクラス

  app::tool::MenuWindow * m_pMenuWindow;  //!< メニューウィンドウ
  MenuID m_menuTable[MENU_TABLE_MAX];     //!< メニュー項目テーブル

  app::tool::MenuCursor * m_pMenuCursor;  //!< メニューカーソル
  void * m_pMenuCursorBuffer;             //!< メニューカーソルリソースバッファ

  app::tool::PaneListView * m_pPaneListView;  //!< ペインリスト

  app::tool::AppCommonGrpIconData * m_pCommonIcon;  //!< 状態異常・タイプ・分類アイコン

  Savedata::MyItem::ITEM_ST ** m_itemTable[PlayData::POCKET_DATA_MAX];  //!< ポケットごとの道具データ
  u32 m_itemTableMax[PlayData::POCKET_DATA_MAX];    //!< ポケット内の道具数
  u16 m_pocketNewMax[PlayData::POCKET_DATA_MAX];    //!< ポケット内の新規道具数

  PokeSelectMode m_pokeSelectMode;  //!< ポケモン選択モード

  MenuID m_yesnoResult;     //!< "はい/いいえ"の結果

  TokuseiNo m_newTokusei;   //!< 変化後の特性
  u32 m_unionPos;   //!< 合体させるポケモンの位置

  FORM_CHG_WORK m_formChangeWork;   //!< フォルムチェンジワーク
  FormChangeID m_formChangeID;      //!< フォルムチェンジ呼び出しID

  bool m_isRcvDead;   //!< true = 瀕死回復アイテム
  u16 m_rcvHpCount;   //!< 回復したHP
  u8 m_rcvWazaPos;    //!< 回復する技の位置
  s8 m_rcvPos;        //!< 全体瀕死回復用ポケモン位置

  u32 m_lvupSameLevelIndex;
  WazaNo m_lvupNewWaza;

  bool m_battleStopFlag;            //!< バトル用一時停止フラグ
  RecoverMode m_battleRecoverMode;  //!< バトル用復帰モード

  u32 * m_pTypeSortTable;  //!< 種類順ソート用テーブル
  app::sort::StringItem * m_pSortItem;  //!< 道具明ソート
  app::sort::StringWaza * m_pSortWaza;  //!< 技名ソート

  u16 m_upperItem;      //!< 上画面に表示中の道具
  s8 m_upperPutCount;   //!< 上画面に表示し続けたカウント
  b8 m_listUpdateLock;  //!< true = 上画面の表示更新をロック

//  u16 m_debugCnvItem[2];  //!< 便利ボタン登録アイテム（仮）

  Savedata::MyItem::ITEM_ST * m_cpyPocketItem;  //!< 入れ替え用アイテムデータ
  u16 * m_cpyFreeSpaceItem;                     //!< 入れ替え用アイテムデータ（フリースペース用）

  bool m_isExScroll;  //!< 外部リストスクロールフラグ
  int m_exScrollVec;  //!< 外部リストスクロール方向

  u16 m_catchMovePocket;        //!< キャッチムーブ時のタッチ位置のポケット番号
  u16 m_catchMovePocketCount;   //!< キャッチムーブ時のポケット切り替えカウント

  u32 m_listCatchPocket;  //!< キャッチムーブ時の取得したポケット位置
  u32 m_listCatchPos;     //!< キャッチムーブ時の取得したリストカーソル位置
  f32 m_listCatchScroll;  //!< キャッチムーブ時の取得したリストスクロール値

  bool m_isUpdateCatch;   //!< true = キャッチ操作

  WordSetLoader * m_pWordSetLoader;   //!< ワードセットローダー

  bool m_isDemoMode;          //!< true = デモモード
  DemoModeRequest m_demoReq;  //!< デモモードのリクエスト

  u32 m_useItem;            //!< 使用した道具（消費アイテムがまだあるかを判別するために使用）
  bool m_updatePlateLock;   //!< プレートの変更をロックする（アイテム使用時に使用）

  WazaNo m_zCubeWazaTable[ZCUBE_WAZA_MAX];  //!< ジガルデキューブの技テーブル
  WazaNo m_zCubeSelectWazaNo;               //!< ジガルデキューブで選択した技番号

  System::DeviceTurnWatcher * m_pDevTurnWatcher;  //!< 本体逆さチェッククラス

  bool m_isSasiosaeErr;   //!< さしおさえエラー

  App::Tool::ItemEffect * m_pItemEffect;  //!< エフェクトクラス
//  gfl2::renderingengine::scenegraph::instance::DrawEnvNode * m_effectDrawEnvNodeOfCamera; //!< カメラを含む環境
//  poke_3d::model::BaseCamera * m_effectCamera;  //!< カメラ

  bool m_isCatchItemPut;  //!< キャッチしたアイテムを配置

  gfl2::ui::TouchPanel * m_touchPanel;   //!< タッチパネル

  bool m_isUIViewInputExclusiveKey;   //!< UIViewマネージャのボタン監視モード

  bool m_isFrameDrawEnable;   //!< フレームの描画許可フラグ

  u32 m_pokeItemCatchPos;   //!< @fix NMCat[3917]: キャッチしたポケモンの並び位置

  u8 m_pocketOnBit;   //!< ポケット存在フラグ（ビット単位）

  const Field::RotomPower::RotomPowerManager * m_rotomPower;  //!< ロトムパワー


#if PM_DEBUG
#if 1
  void Degug_CreateItemData(void);
//  void DebugUpdateDemoMode(void);
#endif

  static const u32 DEBUG_PRINT_TIME_ID_INIT = 0xffffffff;
  void DebugPrintTime( u32 id );
#endif
};

GFL_NAMESPACE_END(bag)
GFL_NAMESPACE_END(app)

#endif  // BAG_FRAME_H_INCLUDED

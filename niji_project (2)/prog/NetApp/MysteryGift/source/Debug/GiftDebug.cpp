  
#if PM_DEBUG

//==============================================================================
/**
 * @file   GiftDebug.cpp
 * @date   2016/03/25 Fri. 11:34:23
 * @author muto_yu
 * @brief  
 * @par Copyright
 * (C)1995-2015 GAME FREAK inc. All Rights Reserved.
 */
//==============================================================================


// =============================================================================
/**/
//==============================================================================
#include  "GameSys/include/GameManager.h"
#include  "GameSys/include/GameData.h"

#include  "../GiftResource.h"
#include  "../ApplicationSystem/GiftWork.h"
#include  "./GiftDebug.h"

#include <Debug/DebugWin/include/DebugWinSystem.h>
// メッセージのインデックス
#include "niji_conv_header/message/debug/msg_debug_menu.h"


// =============================================================================
/**/
//==============================================================================
namespace
{
  bool IsTrigA(void)
  {
    gfl2::ui::Button* pButton = GFL_SINGLETON_INSTANCE( GameSys::GameManager )->GetUiDeviceManager()->GetButton(gfl2::ui::DeviceManager::BUTTON_STANDARD);

    return (pButton->IsTrigger(gfl2::ui::BUTTON_A));
  }


  NetApp::Gift::Debug::GiftDebug*  ToThis(void* _pThis)
  {
    return static_cast<NetApp::Gift::Debug::GiftDebug*>(_pThis);
  }



#if 0
  static const  Savedata::MysteryGiftSave::MYSTERY_GIFT_DATA testGiftData  =
  {
    0xffff,             //    u16     eventID;          ///<イベントID   ※データごとに一意であり、ゲーム中に同時に同一のIDを持ったデータが複数存在しないことが前提
    {L"testdata"},      //    wchar_t eventName[37];    ///<イベント名
    20160328,           //    u32     recvDate;         ///<受信した日付 ※8ケタの整数。2012/10/02だったら20121002となる
    1,                  //    u8      cardMessageID;    ///<カードメッセージID
    1,                  //    u8      dataType;         ///<データタイプ    MYSTERY_GIFT_TYPE:  ポケモン / アイテム / BattlePoint / 豆 / ポケモン+アイテム
    0,                  //    u8      recvFlag;         ///<受け取りフラグ　１度だけ受信フラグ	0bit	0：何度デモでも受信可能、１：１回のみ受け取りフラグ	1bit	配達員からの受け取りフラグ
    2,                  //    u8      rarity;           ///<レアリティ： 0:普通（カードの色：銅） 1:少し貴重（銀） 2:貴重（金）
    {0},                //    u8      padding1[16];     ///<パディング
    0,                  //    u16     crc;              ///<CRC
    0,                  //    u16     key;              ///<暗号キー
    {
      0x03, 0x00,  1, 0x00,
      0x04, 0x00,  3, 0x00,
      0x05, 0x00,  5, 0x00,
      0x06, 0x00,  7, 0x00,
      0x07, 0x00,  9, 0x00,
      0x08, 0x00, 11, 0x00,
    },      //    u8      body[160];        ///<データボディ(MYSTERY_GIFT_POKE_DATA か MYSTERY_GIFT_ITEM_DATA か MYSTERY_GIFT_POWER_DATA のいずれかが入る)
  };
#endif


  union Union_DebugGiftData
  {
    u8                                                  bytes[sizeof(Savedata::MysteryGiftSave::MYSTERY_GIFT_RECV_DATA)];
    Savedata::MysteryGiftSave::MYSTERY_GIFT_RECV_DATA   giftRecvData;
  };


  static const Union_DebugGiftData  debugGiftData[] =
  {
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xE2,0x30,0xAF,0x30,
      0xED,0x30,0xFC,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x8A,0xB6,0x00,0x00,0x46,0x46,0x01,0x00,0x85,0x92,0x1A,0xFF,0xE2,0x30,
      0xAF,0x30,0xED,0x30,0xFC,0x30,0x08,0xFF,0x53,0x90,0x77,0x51,0x42,0x30,0x8A,0x30,
      0x09,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x91,0x2B,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x10,0x00,
      0x10,0x01,0x4B,0x00,0x63,0x01,0x68,0x00,0xB5,0x01,0xD2,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x04,0x03,0x41,0x9C,0x44,0x9C,
      0x30,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xB3,0x30,
      0xED,0x30,0xB3,0x30,0xED,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x04,0x00,0x05,0x00,0x00,0x00,
      0x4B,0x00,0x63,0x01,0x68,0x00,0xB5,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x06,0xFC,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xCB,0x30,0xE3,0x30,
      0xD3,0x30,0xFC,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0xEF,0x6B,0x00,0x00,0x46,0x46,0x02,0x00,0x80,0x92,0x1A,0xFF,0xCB,0x30,
      0xE3,0x30,0xD3,0x30,0xFC,0x30,0x08,0xFF,0x53,0x90,0x77,0x51,0x42,0x30,0x8A,0x30,
      0x09,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x00,0x01,0x01,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x91,0x2B,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x10,0x00,
      0x11,0x01,0x7E,0x00,0x62,0x00,0xC5,0x00,0xF2,0x00,0xD5,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x04,0x03,0x41,0x9C,0x44,0x9C,
      0x30,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xB3,0x30,
      0xED,0x30,0xB3,0x30,0xED,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x04,0x00,0x05,0x00,0x00,0x00,
      0x7E,0x00,0x62,0x00,0xC5,0x00,0xF2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x06,0xFC,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xA2,0x30,0xB7,0x30,
      0xDE,0x30,0xEA,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
      0x00,0x00,0x8E,0x30,0x00,0x00,0x46,0x46,0x03,0x00,0x20,0x66,0x3B,0x75,0x4D,0x91,
      0xE1,0x4F,0x1A,0xFF,0xA2,0x30,0xB7,0x30,0xDE,0x30,0xEA,0x30,0x08,0xFF,0x53,0x90,
      0x77,0x51,0x42,0x30,0x8A,0x30,0x09,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x00,0x04,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x91,0x2B,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x10,0x00,
      0x98,0x03,0x38,0x00,0x39,0x00,0x2F,0x00,0x3A,0x00,0xD8,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x04,0x03,0x41,0x9C,0x44,0x9C,
      0x30,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xB3,0x30,
      0xED,0x30,0xB3,0x30,0xED,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x04,0x00,0x05,0x00,0x00,0x00,
      0x38,0x00,0x39,0x00,0x2F,0x00,0x3A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x06,0xFC,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xE2,0x30,0xF3,0x30,
      0xB9,0x30,0xBF,0x30,0xFC,0x30,0xDC,0x30,0xFC,0x30,0xEB,0x30,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x18,0xE2,0x00,0x00,0x46,0x46,0x04,0x00,0x85,0x92,0x1A,0xFF,0xE2,0x30,
      0xF3,0x30,0xB9,0x30,0xBF,0x30,0xFC,0x30,0xDC,0x30,0xFC,0x30,0xEB,0x30,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x04,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xB9,0x30,0xFC,0x30,
      0xD1,0x30,0xFC,0x30,0xDC,0x30,0xFC,0x30,0xEB,0x30,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x5F,0xC9,0x00,0x00,0x46,0x46,0x05,0x00,0x80,0x92,0x1A,0xFF,0xB9,0x30,
      0xFC,0x30,0xD1,0x30,0xFC,0x30,0xDC,0x30,0xFC,0x30,0xEB,0x30,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x01,0x01,0x01,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x03,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xCF,0x30,0xA4,0x30,
      0xD1,0x30,0xFC,0x30,0xDC,0x30,0xFC,0x30,0xEB,0x30,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
      0x00,0x00,0x4F,0x1B,0x00,0x00,0x46,0x46,0x06,0x00,0x20,0x66,0x3B,0x75,0x4D,0x91,
      0xE1,0x4F,0x1A,0xFF,0xCF,0x30,0xA4,0x30,0xD1,0x30,0xFC,0x30,0xDC,0x30,0xFC,0x30,
      0xEB,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x01,0x04,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x02,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xDD,0x30,0xB1,0x30,
      0xDE,0x30,0xE1,0x30,0x11,0xFF,0x0B,0x50,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0xDF,0x44,0x00,0x00,0x46,0x46,0x07,0x00,0x85,0x92,0x1A,0xFF,0xDD,0x30,
      0xB1,0x30,0xDE,0x30,0xE1,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xDD,0x30,0xB1,0x30,
      0xDE,0x30,0xE1,0x30,0x12,0xFF,0x0B,0x50,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x68,0x2D,0x00,0x00,0x46,0x46,0x08,0x00,0x80,0x92,0x1A,0xFF,0xDD,0x30,
      0xB1,0x30,0xDE,0x30,0xE1,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x02,0x01,0x01,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xDD,0x30,0xB1,0x30,
      0xDE,0x30,0xE1,0x30,0x13,0xFF,0x0B,0x50,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
      0x00,0x00,0x27,0x60,0x00,0x00,0x46,0x46,0x09,0x00,0x20,0x66,0x3B,0x75,0x4D,0x91,
      0xE1,0x4F,0x1A,0xFF,0xDD,0x30,0xB1,0x30,0xDE,0x30,0xE1,0x30,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x02,0x04,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0x22,0xFF,0x30,0xFF,
      0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x37,0x6A,0x00,0x00,0x46,0x46,0x0A,0x00,0x85,0x92,0x1A,0xFF,0x22,0xFF,
      0x30,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0x22,0xFF,0x30,0xFF,
      0x12,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x36,0x79,0x00,0x00,0x46,0x46,0x0B,0x00,0x80,0x92,0x1A,0xFF,0x22,0xFF,
      0x30,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x03,0x01,0x01,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0x22,0xFF,0x30,0xFF,
      0x13,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
      0x00,0x00,0xEC,0x80,0x00,0x00,0x46,0x46,0x0C,0x00,0x20,0x66,0x3B,0x75,0x4D,0x91,
      0xE1,0x4F,0x1A,0xFF,0x22,0xFF,0x30,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x03,0x04,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xC4,0x30,0xC4,0x30,
      0xB1,0x30,0xE9,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x65,0x78,0x00,0x00,0x46,0x46,0x0D,0x00,0x85,0x92,0x1A,0xFF,0xC4,0x30,
      0xC4,0x30,0xB1,0x30,0xE9,0x30,0x08,0xFF,0x53,0x90,0x77,0x51,0x6A,0x30,0x57,0x30,
      0x09,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x91,0x2B,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x10,0x00,
      0x00,0x00,0x40,0x00,0xF9,0x00,0x00,0x00,0x00,0x00,0xDB,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x04,0x03,0x41,0x9C,0x44,0x9C,
      0x30,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xB3,0x30,
      0xED,0x30,0xB3,0x30,0xED,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x04,0x00,0x05,0x00,0x00,0x00,
      0x40,0x00,0xF9,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x06,0xFC,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xCD,0x30,0xC3,0x30,
      0xB3,0x30,0xA2,0x30,0xE9,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x7C,0xDA,0x00,0x00,0x46,0x46,0x0E,0x00,0x80,0x92,0x1A,0xFF,0xCD,0x30,
      0xC3,0x30,0xB3,0x30,0xA2,0x30,0xE9,0x30,0x08,0xFF,0x53,0x90,0x77,0x51,0x6A,0x30,
      0x57,0x30,0x09,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x00,0x01,0x01,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x91,0x2B,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x10,0x00,
      0x00,0x00,0x5D,0x00,0x5E,0x00,0x95,0x00,0xD6,0x00,0x07,0x03,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x04,0x03,0x41,0x9C,0x44,0x9C,
      0x30,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xB3,0x30,
      0xED,0x30,0xB3,0x30,0xED,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x04,0x00,0x05,0x00,0x00,0x00,
      0x5D,0x00,0x5E,0x00,0x95,0x00,0xD6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x06,0xFC,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
    {
      0x03,0x00,0x00,0x00,0xC0,0x30,0xDF,0x30,0xFC,0x30,0x1A,0xFF,0xB9,0x30,0xCA,0x30,
      0xD0,0x30,0xA1,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
      0x00,0x00,0xE9,0xF6,0x00,0x00,0x46,0x46,0x0F,0x00,0x20,0x66,0x3B,0x75,0x4D,0x91,
      0xE1,0x4F,0x1A,0xFF,0xB9,0x30,0xCA,0x30,0xD0,0x30,0xA1,0x30,0x08,0xFF,0x53,0x90,
      0x77,0x51,0x6A,0x30,0x57,0x30,0x09,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x00,0x04,0x02,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,
      0x91,0x2B,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x10,0x00,
      0x00,0x00,0x59,0x00,0x5B,0x00,0x1C,0x00,0xB6,0x00,0x01,0x03,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x04,0x03,0x41,0x9C,0x44,0x9C,
      0x30,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xB3,0x30,
      0xED,0x30,0xB3,0x30,0xED,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x04,0x00,0x05,0x00,0x00,0x00,
      0x59,0x00,0x5B,0x00,0x1C,0x00,0xB6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x06,0xFC,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    },
  };

  static const u32 debugGiftDataNum = GFL_NELEMS(debugGiftData);



  /*    */
  void  Fill(const u32 fills = Savedata::MysteryGiftSave::MYSTERY_GIFT_DATA_NUM)
  {
    Savedata::MysteryGiftSave*  pSave   = NetApp::Gift::GetMysteryGiftSave();
    bool                        bPushed;
    u32                         remains = fills;

    do
    {
      const u32 index = System::GflUse::GetPublicRand(debugGiftDataNum);
      bPushed = pSave->PushBackGiftData(&(debugGiftData[index].giftRecvData.dataBody));
    }while(bPushed && (--remains));
  }

  /*    */
  void  Delete(const u32 deleteNum = Savedata::MysteryGiftSave::MYSTERY_GIFT_DATA_NUM)
  {
    Savedata::MysteryGiftSave*  pSave   = NetApp::Gift::GetMysteryGiftSave();
    bool                        bDeleted;
    u32                         remains = deleteNum;

    do
    {
      pSave->SetRecvFlag(0);
      bDeleted  = pSave->DeleteGiftData(0);
    }while(bDeleted && (--remains));
  }

  /*    */
  void  Receive(const u32 receiveNum = Savedata::MysteryGiftSave::MYSTERY_GIFT_DATA_NUM)
  {
    Savedata::MysteryGiftSave*  pSave   = NetApp::Gift::GetMysteryGiftSave();
    bool                        bDeleted;
    u32                         remains = receiveNum;
    const u32                   dataNum = pSave->GetGiftDataNum();


    for(u32 index = 0; (index < dataNum) && remains; ++index)
    {
      if(pSave->GetRecvFlag(index)) continue;
      
      pSave->SetRecvFlag(index);
      --remains;
    }
  }


}




namespace NetApp    {
namespace Gift  {
namespace Debug     {
// =============================================================================
/**/
//==============================================================================

//------------------------------------------------------------------
/**
  *  @func     
  *  @brief    
  *  @param    
  *  @return   
  */
//------------------------------------------------------------------
GiftDebug::GiftDebug(GiftWork* pWork)
  : m_pWork(pWork)
  , m_pGroup_Root(NULL)
  , m_pGroups()
  , m_ServerDate()
  , m_LocalDate()
  , m_LocalDateTarget(0)
  /*  text  */
  , m_Text()
{
  ::Debug::DebugWin::DebugWinWork*  devWork       = GFL_SINGLETON_INSTANCE( ::Debug::DebugWin::DebugWinWork );
  gfl2::str::MsgData*               pMsgData      = devWork->GetMessageData();
  gfl2::heap::HeapBase*             pHeapBase     = m_pWork->GetDeviceHeap();
  gfl2::debug::DebugWinGroup*       pCurrentGroup = NULL;

  /*  GiftGroup  */
  m_pGroup_Root                             = gfl2::debug::DebugWin_AddGroup(m_pWork->GetDeviceHeap(), pMsgData, msg_dmenu_gift_group_root);
  m_pGroups[GROUP_ALBUM]                    = gfl2::debug::DebugWin_AddGroup(m_pWork->GetDeviceHeap(), L"Album",            m_pGroup_Root);
  m_pGroups[GROUP_GIFTFLAG_ReceiveOnce]     = gfl2::debug::DebugWin_AddGroup(m_pWork->GetDeviceHeap(), L"Flag:ReceiveOnce", m_pGroup_Root);
  m_pGroups[GROUP_GIFTFLAG_RandomDeliv]     = gfl2::debug::DebugWin_AddGroup(m_pWork->GetDeviceHeap(), L"Flag:Random",      m_pGroup_Root);
  m_pGroups[GROUP_GIFTFLAG_ReceiveOnceADay] = gfl2::debug::DebugWin_AddGroup(m_pWork->GetDeviceHeap(), L"Flag:OnceADay",    m_pGroup_Root);

  /*  win  */
#define VALDEF(_ItemID, _CaptionID, _min, _max)   do{ \
                                                    m_ViewItemInfos[(_ItemID)].pThis      = this;  \
                                                    m_ViewItemInfos[(_ItemID)].pViewItem  = gfl2::debug::DebugWin_AddItemValueU32(pCurrentGroup, pHeapBase, pMsgData, _CaptionID, &m_ViewItemInfos[(_ItemID)].value, (_min), (_max)); \
                                                    m_ViewItemInfos[(_ItemID)].value      = (_min); \
                                                  }while(false)

#define VALDEFDIRECT(_ItemID, _Caption, _min, _max)   do{ \
                                                    m_ViewItemInfos[(_ItemID)].pThis      = this;  \
                                                    m_ViewItemInfos[(_ItemID)].pViewItem  = gfl2::debug::DebugWin_AddItemValueU32(pCurrentGroup, pHeapBase, _Caption, &m_ViewItemInfos[(_ItemID)].value, (_min), (_max)); \
                                                    m_ViewItemInfos[(_ItemID)].value      = (_min); \
                                                  }while(false)

#define PROCDEF(_CaptionID, _ptrFunc)             do{ \
                                                    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, pMsgData, _CaptionID, this, _ptrFunc);  \
                                                  }while(false)

#define PROCDEFDIRECT(_Caption, _ptrFunc)       do{ \
                                                    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, _Caption, this, _ptrFunc);  \
                                                  }while(false)

  /*  Album  */
  pCurrentGroup = m_pGroups[GROUP_ALBUM];
  {
    PROCDEF(msg_dmenu_gift_fullfill, FullFill);
    PROCDEF(msg_dmenu_gift_deleteall, DeleteAll);

    /*  追加  */
    VALDEF( VALITEM_FillNum,    msg_dmenu_gift_numfill_value,     1, Savedata::MysteryGiftSave::MYSTERY_GIFT_DATA_NUM);
    PROCDEF(msg_dmenu_gift_numfill,     NumFill);

    /*  削除  */
    VALDEF( VALITEM_DeleteNum,  msg_dmenu_gift_numdelete_value,   1, Savedata::MysteryGiftSave::MYSTERY_GIFT_DATA_NUM);
    PROCDEF(msg_dmenu_gift_numdelete,   NumDelete);

    /*  受け取り  */
    VALDEF( VALITEM_ReceiveNum, msg_dmenu_gift_numreceive_value,  1, Savedata::MysteryGiftSave::MYSTERY_GIFT_DATA_NUM);
    PROCDEF(msg_dmenu_gift_numreceive,  NumReceive);


    /*  penaltyInfo  */
    VALDEFDIRECT(VALITEM_IsDispPenaltyInfo,       L"DispPenaltyInfo",  0, 1);

    /*  forcedEshopCheck  */
    VALDEFDIRECT(VALITEM_IsEShopTransitionCheck,  L"EShopTransitionCheck",  0, 1);


    /*    */
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"ServerTime", this, Update_ServerTimeVal, Draw_ServerTimeVal);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L" LocalTime", this, Update_LocalTimeVal,  Draw_LocalTimeVal);

    VALDEFDIRECT(VALITEM_OverwriteServerTimeByLocalTime,  L"ServerTime <== LocalTime",  0, 1);

    /*  ngcount  */
    VALDEFDIRECT(VALITEM_NGCount, L"NGCount",  1, Savedata::MysteryGiftSave::SERIAL_AUTH_FAILED_COUNT_TO_PENALTY);
    PROCDEFDIRECT(L"SetNGCount", SetSerialPenaltyCount);

    /*  clear  */
    PROCDEFDIRECT(L"ClearPenalty", ClearSerialPenalty);
  }

  /*  GROUP_GIFTFLAG_ReceiveOnce  */
  pCurrentGroup = m_pGroups[GROUP_GIFTFLAG_ReceiveOnce];
  {
    PROCDEFDIRECT(L"ClearAll", ClearAllReceiveOnceFlag);

    VALDEFDIRECT(VALITEM_ReceiveOnceFlag_TargetEventID,  L"",  0, Savedata::MysteryGiftSave::EVENTID_MAX);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_ReceiveOnceFlag,  Draw_ReceiveOnceFlag);
  }


  /*  GROUP_GIFTFLAG_RandomDeliv  */
  pCurrentGroup = m_pGroups[GROUP_GIFTFLAG_RandomDeliv];
  {
    PROCDEFDIRECT(L"ClearAll", ClearAllRandomDelivFlag);

    VALDEFDIRECT(VALITEM_RandomDelivFlag_Index,  L"page",  0, (Savedata::MysteryGiftSave::RANDOM_DELIVERY_FLAG_NUM - 1)/10);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_00,  Draw_RandomDelivFlagVal_00);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_01,  Draw_RandomDelivFlagVal_01);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_02,  Draw_RandomDelivFlagVal_02);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_03,  Draw_RandomDelivFlagVal_03);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_04,  Draw_RandomDelivFlagVal_04);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_05,  Draw_RandomDelivFlagVal_05);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_06,  Draw_RandomDelivFlagVal_06);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_07,  Draw_RandomDelivFlagVal_07);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_08,  Draw_RandomDelivFlagVal_08);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"", this, Update_RandomDelivFlagVal_09,  Draw_RandomDelivFlagVal_09);
  }

  /*  GROUP_GIFTFLAG_ReceiveOnceADay  */
  pCurrentGroup = m_pGroups[GROUP_GIFTFLAG_ReceiveOnceADay];
  {
    PROCDEFDIRECT(L"ClearAll", ClearAllReceiveOnceADayFlag);

    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[0]:", this, Update_ReceiveOnceADayVal_00,  Draw_ReceiveOnceADayVal_00);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[1]:", this, Update_ReceiveOnceADayVal_01,  Draw_ReceiveOnceADayVal_01);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[2]:", this, Update_ReceiveOnceADayVal_02,  Draw_ReceiveOnceADayVal_02);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[3]:", this, Update_ReceiveOnceADayVal_03,  Draw_ReceiveOnceADayVal_03);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[4]:", this, Update_ReceiveOnceADayVal_04,  Draw_ReceiveOnceADayVal_04);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[5]:", this, Update_ReceiveOnceADayVal_05,  Draw_ReceiveOnceADayVal_05);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[6]:", this, Update_ReceiveOnceADayVal_06,  Draw_ReceiveOnceADayVal_06);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[7]:", this, Update_ReceiveOnceADayVal_07,  Draw_ReceiveOnceADayVal_07);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[8]:", this, Update_ReceiveOnceADayVal_08,  Draw_ReceiveOnceADayVal_08);
    gfl2::debug::DebugWin_AddItemUpdateFunc(pCurrentGroup, pHeapBase, L"[9]:", this, Update_ReceiveOnceADayVal_09,  Draw_ReceiveOnceADayVal_09);
  }

#undef  PROCDEFDIRECT
#undef  VALDEFDIRECT
#undef  PROCDEF
#undef  VALDEF


  /*  text  */
  m_Text.Initialize(m_pWork->GetAppHeap());
  m_Text.Scale(0.8f, 0.8f);
  
}


//------------------------------------------------------------------
/**
  *  @func     
  *  @brief    
  *  @param    
  *  @return   
  */
//------------------------------------------------------------------
GiftDebug::~GiftDebug()
{
  m_Text.Finalize();

  /*  groups  */
  /*  sub  */
  for(u32 index = 0; index < GFL_NELEMS(m_pGroups); ++index)
  {
    gfl2::debug::DebugWin_RemoveGroup(m_pGroups[index]);
  }
  /*  root  */
  gfl2::debug::DebugWin_RemoveGroup(m_pGroup_Root);
}


//------------------------------------------------------------------
/**
  */
//------------------------------------------------------------------
void   GiftDebug::FullFill(   void* _pThis, gfl2::debug::DebugWinItem* pItem)
{
  if(IsTrigA())
  {
    Fill();
  }
}


void   GiftDebug::DeleteAll(  void* _pThis, gfl2::debug::DebugWinItem* pItem)
{
  if(IsTrigA())
  {
    Delete();
  }
}


void   GiftDebug::NumFill(    void* _pThis, gfl2::debug::DebugWinItem* pItem)
{
  if(IsTrigA())
  {
    GiftDebug*  pThis = ToThis(_pThis);

    Fill(pThis->m_ViewItemInfos[VALITEM_FillNum].value);
  }
}


void   GiftDebug::NumDelete(  void* _pThis, gfl2::debug::DebugWinItem* pItem)
{
  if(IsTrigA())
  {
    GiftDebug*  pThis = ToThis(_pThis);

    Delete(pThis->m_ViewItemInfos[VALITEM_DeleteNum].value);
  }
}


void   GiftDebug::NumReceive( void* _pThis, gfl2::debug::DebugWinItem* pItem)
{
  if(IsTrigA())
  {
    GiftDebug*  pThis = ToThis(_pThis);

    Receive(pThis->m_ViewItemInfos[VALITEM_ReceiveNum].value);
  }
}



//------------------------------------------------------------------
/**
  *  @func     
  *  @brief    
  *  @param    
  *  @return   
  */
//------------------------------------------------------------------
void   GiftDebug::SetSerialPenaltyCount(  void* _pThis, gfl2::debug::DebugWinItem* pItem)
{
  if(IsTrigA())
  {
    GiftDebug*                  pThis = ToThis(_pThis);
    Savedata::MysteryGiftSave*  pSave = NetApp::Gift::GetMysteryGiftSave();
    
    pSave->Debug_SetSerialNGCount(pThis->m_ViewItemInfos[VALITEM_NGCount].value);
    pItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
  }
}

//------------------------------------------------------------------
/**
  *  @brief    
  */
//------------------------------------------------------------------
void   GiftDebug::ClearSerialPenalty(     void* _pThis, gfl2::debug::DebugWinItem* pItem)
{
  if(IsTrigA())
  {
    GiftDebug*                  pThis = ToThis(_pThis);
    Savedata::MysteryGiftSave*  pSave = NetApp::Gift::GetMysteryGiftSave();
    
    pSave->Debug_ClearSerialNGPenalty();
    pItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
  }
}













void  GiftDebug::Update_ServerTimeVal(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  GiftDebug*  pThis = ToThis(_pThis);
  
  pThis->OnUpdate_TimeVal(pWinItem, 0);
}


wchar_t*  GiftDebug::Draw_ServerTimeVal( void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  GiftDebug*  pThis = ToThis(_pThis);
  return  pThis->OnDraw_TimeVal(pWinItem, 0);
}

void  GiftDebug::Update_LocalTimeVal(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  GiftDebug*  pThis = ToThis(_pThis);
  
  pThis->OnUpdate_TimeVal(pWinItem, 1);
}


wchar_t*  GiftDebug::Draw_LocalTimeVal( void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  GiftDebug*  pThis = ToThis(_pThis);
  return  pThis->OnDraw_TimeVal(pWinItem, 1);
}



//------------------------------------------------------------------
/**
  *  @func     
  *  @brief    
  *  @param    
  *  @return   
  */
//------------------------------------------------------------------
void  GiftDebug::ApplyServerDate(const gfl2::system::Date& rServerDate)
{
  // @fix GFCHECK[2981] Dayの情報を初期化する。
  m_ServerDate.SetDay(1);

  m_ServerDate.SetYear(rServerDate.GetYear());
  m_ServerDate.SetMonth(rServerDate.GetMonth());
  m_ServerDate.SetDay(rServerDate.GetDay());
  m_ServerDate.SetHour(rServerDate.GetHour());
  m_ServerDate.SetMinute(rServerDate.GetMinute());
}




void  GiftDebug::OnUpdate_TimeVal(gfl2::debug::DebugWinItem* pWinItem, const u32 mode)
{
  gfl2::ui::Button* pButton = GFL_SINGLETON_INSTANCE( GameSys::GameManager )->GetUiDeviceManager()->GetButton(gfl2::ui::DeviceManager::BUTTON_STANDARD);

  switch(mode)
  {
    case  0:  /*  servertime  */
      if(IsTrigA())
      {
        // @fix GFCHECK[2981] Dayの情報を初期化する。
        m_LocalDate.SetDay(1);

        m_LocalDate.SetYear(m_ServerDate.GetYear());
        m_LocalDate.SetMonth(m_ServerDate.GetMonth());
        m_LocalDate.SetDay(m_ServerDate.GetDay());
        m_LocalDate.SetHour(m_ServerDate.GetHour());
        m_LocalDate.SetMinute(m_ServerDate.GetMinute());
        pWinItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
      }
      break;

    case  1:  /*  localtime  */
      if(IsTrigA())
      {
        Savedata::MysteryGiftSave*   pGiftSave  = GetMysteryGiftSave();

        pGiftSave->Debug_SetSerialNGDate(m_LocalDate);

        pWinItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
      }
      else
      {
        const u32 localDateTargetMax  = 5;
        s32 year    = m_LocalDate.GetYear();
        s32 month   = m_LocalDate.GetMonth();
        s32 day     = m_LocalDate.GetDay();
        s32 hour    = m_LocalDate.GetHour();
        s32 minute  = m_LocalDate.GetMinute();
        
        if(pButton->IsTrigger(gfl2::ui::BUTTON_R))        ++m_LocalDateTarget;
        else if(pButton->IsTrigger(gfl2::ui::BUTTON_L))   m_LocalDateTarget += 4;

        m_LocalDateTarget %= localDateTargetMax;

        if(pButton->IsRepeat(gfl2::ui::BUTTON_RIGHT))
        {
          switch(m_LocalDateTarget)
          {
            case  0:
              ++year;
              break;

            case  1:
              ++month;
              if(12 < month)  month = 1;
              break;

            case  2:
              ++day;
              if(31 < day)  day = 1;
              break;

            case  3:
              ++hour;
              hour  %= 24;
              break;

            case  4:
              ++minute;
              minute  %= 60;
              break;
          }
        }
        
        if(pButton->IsRepeat(gfl2::ui::BUTTON_LEFT))
        {
          switch(m_LocalDateTarget)
          {
            case  0:
              --year;
              break;

            case  1:
              --month;
              if(month < 1)  month = 12;
              break;

            case  2:
              --day;
              if(day < 1)  day = 31;
              break;

            case  3:
              --hour;
              if(hour < 0) hour = 23;
              break;

            case  4:
              --minute;
              if(minute < 0)  minute  = 59;
              break;
          }
        }
        // @fix GFCHECK[2981] Dayの情報を初期化する。
        m_LocalDate.SetDay(1);

        m_LocalDate.SetYear(year);
        m_LocalDate.SetMonth(month);
        m_LocalDate.SetDay(day);
        m_LocalDate.SetHour(hour);
        m_LocalDate.SetMinute(minute);
      }
      break;
  }
}


wchar_t*  GiftDebug::OnDraw_TimeVal(gfl2::debug::DebugWinItem* pWinItem, const u32 mode)
{
  wchar_t*        pWorkStr = gfl2::debug::DebugWin_GetWorkStr();
  const wchar_t*  pName    = pWinItem->GetName();
  s32       year      = 0;
  s32       month     = 0;
  s32       day       = 0;
  s32       hour      = 0;
  s32       minute    = 0;


  switch(mode)
  {
    case  0:  /*  servertime  */
      year    = m_ServerDate.GetYear();
      month   = m_ServerDate.GetMonth();
      day     = m_ServerDate.GetDay();
      hour    = m_ServerDate.GetHour();
      minute  = m_ServerDate.GetMinute();
      break;

    case  1:  /*  savetime    */
      year    = m_LocalDate.GetYear();
      month   = m_LocalDate.GetMonth();
      day     = m_LocalDate.GetDay();
      hour    = m_LocalDate.GetHour();
      minute  = m_LocalDate.GetMinute();
      break;
  }

#define cL(_target)   (((mode == 1) && ((_target) == m_LocalDateTarget)) ? ">" : "")
#define cR(_target)   (((mode == 1) && ((_target) == m_LocalDateTarget)) ? "<" : "")

  swprintf(
    pWorkStr,
    gfl2::debug::DEBUGWIN_NAME_LEN,
    L"%ls[%s%04d%s/%s%02d%s/%s%02d%s %s%02d%s:%s%02d%s]",
    pWinItem->GetName(),
    cL(0), year,    cR(0),
    cL(1), month,   cR(1),
    cL(2), day,     cR(2),
    cL(3), hour,    cR(3),
    cL(4), minute,  cR(4)
  );

#undef  cL
#undef  cR



  return pWorkStr;
}


//------------------------------------------------------------------
/**
  *  @brief    
  */
//------------------------------------------------------------------
void     GiftDebug::ClearAllReceiveOnceFlag(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  if(IsTrigA())
  {
    GetMysteryGiftSave()->Debug_ClearRecieveOnceFlag();
    pWinItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
  }
}

/*    */
void     GiftDebug::Update_ReceiveOnceFlag(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  if(IsTrigA())
  {
    const u16   targetEventID = ToThis(_pThis)->m_ViewItemInfos[VALITEM_ReceiveOnceFlag_TargetEventID].value;
    
    if(Savedata::MysteryGiftSave::IsValidEventID(targetEventID))
    {
      GetMysteryGiftSave()->Debug_SetRecieveOnceFlag(targetEventID, !(GetMysteryGiftSave()->Debug_IsRecieveOnceFlag(targetEventID)));
      pWinItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
    }
  }
}

/*    */
wchar_t* GiftDebug::Draw_ReceiveOnceFlag( void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  wchar_t*  pWorkStr  = gfl2::debug::DebugWin_GetWorkStr();
  const u32 eventID   = ToThis(_pThis)->m_ViewItemInfos[VALITEM_ReceiveOnceFlag_TargetEventID].value;

  if(Savedata::MysteryGiftSave::IsValidEventID(eventID))
  {
    swprintf(
      pWorkStr,
      gfl2::debug::DEBUGWIN_NAME_LEN,
      L"evID:%4u, %ls",
      eventID,
      GetMysteryGiftSave()->Debug_IsRecieveOnceFlag(eventID) ? L"-received-" : L"----"
    );
  }
  else
  {
    swprintf(
      pWorkStr,
      gfl2::debug::DEBUGWIN_NAME_LEN,
      L"evID:%4u, invalid evID",
      eventID
    );
  }

  return pWorkStr;
}



//------------------------------------------------------------------
/**
  *  @brief    
  */
//------------------------------------------------------------------
void  GiftDebug::Update_RandomDelivFlagVal_00(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+0);}
void  GiftDebug::Update_RandomDelivFlagVal_01(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+1);}
void  GiftDebug::Update_RandomDelivFlagVal_02(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+2);}
void  GiftDebug::Update_RandomDelivFlagVal_03(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+3);}
void  GiftDebug::Update_RandomDelivFlagVal_04(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+4);}
void  GiftDebug::Update_RandomDelivFlagVal_05(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+5);}
void  GiftDebug::Update_RandomDelivFlagVal_06(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+6);}
void  GiftDebug::Update_RandomDelivFlagVal_07(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+7);}
void  GiftDebug::Update_RandomDelivFlagVal_08(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+8);}
void  GiftDebug::Update_RandomDelivFlagVal_09(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+9);}


wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_00(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+0);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_01(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+1);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_02(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+2);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_03(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+3);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_04(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+4);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_05(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+5);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_06(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+6);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_07(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+7);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_08(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+8);}
wchar_t*  GiftDebug::Draw_RandomDelivFlagVal_09(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_RandomDelivFlagVal(pWinItem, (ToThis(_pThis)->m_ViewItemInfos[VALITEM_RandomDelivFlag_Index].value*10)+9);}


/*    */
void  GiftDebug::OnUpdate_RandomDelivFlagVal(gfl2::debug::DebugWinItem* pWinItem, const u32 flagIndex)
{
  if(IsTrigA())
  {
    GetMysteryGiftSave()->Debug_DeleteRandomDeliveryFlag(flagIndex);
    pWinItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
  }
}

/*    */
wchar_t*  GiftDebug::OnDraw_RandomDelivFlagVal(gfl2::debug::DebugWinItem* pWinItem, const u32 flagIndex)
{
  wchar_t*        pWorkStr = gfl2::debug::DebugWin_GetWorkStr();

  const Savedata::MysteryGiftSave::RANDOM_DELIVERY_FLAG&  rFlag  = GetMysteryGiftSave()->Debug_GetRandomDeliveryFlag(flagIndex);

  swprintf(
    pWorkStr,
    gfl2::debug::DEBUGWIN_NAME_LEN,
    L"[%02d]: evID:%4d, rnd#:%3d",
    flagIndex,
    rFlag.eventID,
    rFlag.randNo
  );

  return pWorkStr;
}

/*    */
void  GiftDebug::ClearAllRandomDelivFlag(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  if(IsTrigA())
  {
    GetMysteryGiftSave()->Debug_ClearAllRandomDeliveryFlag();
    pWinItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
  }
}


//------------------------------------------------------------------
/**
  *  @func     
  *  @brief    
  *  @param    
  *  @return   
  */
//------------------------------------------------------------------
void  GiftDebug::ClearAllReceiveOnceADayFlag(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)
{
  if(IsTrigA())
  {
    GetMysteryGiftSave()->Debug_ClearAllOneDayFlag();
    pWinItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
  }
}

void  GiftDebug::Update_ReceiveOnceADayVal_00(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 0);}
void  GiftDebug::Update_ReceiveOnceADayVal_01(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 1);}
void  GiftDebug::Update_ReceiveOnceADayVal_02(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 2);}
void  GiftDebug::Update_ReceiveOnceADayVal_03(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 3);}
void  GiftDebug::Update_ReceiveOnceADayVal_04(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 4);}
void  GiftDebug::Update_ReceiveOnceADayVal_05(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 5);}
void  GiftDebug::Update_ReceiveOnceADayVal_06(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 6);}
void  GiftDebug::Update_ReceiveOnceADayVal_07(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 7);}
void  GiftDebug::Update_ReceiveOnceADayVal_08(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 8);}
void  GiftDebug::Update_ReceiveOnceADayVal_09(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {ToThis(_pThis)->OnUpdate_ReceiveOnceADayVal(pWinItem, 9);}


wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_00(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 0);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_01(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 1);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_02(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 2);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_03(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 3);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_04(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 4);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_05(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 5);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_06(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 6);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_07(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 7);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_08(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 8);}
wchar_t*  GiftDebug::Draw_ReceiveOnceADayVal_09(void* _pThis, gfl2::debug::DebugWinItem* pWinItem)  {return ToThis(_pThis)->OnDraw_ReceiveOnceADayVal(pWinItem, 9);}


//------------------------------------------------------------------
/**
  *  @func     
  *  @brief    
  */
//------------------------------------------------------------------
void  GiftDebug::OnUpdate_ReceiveOnceADayVal(gfl2::debug::DebugWinItem* pWinItem, const u32 mode)
{
  if(IsTrigA())
  {
    GetMysteryGiftSave()->Debug_ClearOneDayFlag(mode);
    pWinItem->PlaySystemSound( gfl2::debug::SE_ACCEPT );
  }
}


//------------------------------------------------------------------
/**
  *  @func     
  *  @brief    
  */
//------------------------------------------------------------------
wchar_t*  GiftDebug::OnDraw_ReceiveOnceADayVal(gfl2::debug::DebugWinItem* pWinItem, const u32 mode)
{
  wchar_t*        pWorkStr = gfl2::debug::DebugWin_GetWorkStr();

  const Savedata::MysteryGiftSave::ONE_DAY_FLAG&  rOnedayData  = GetMysteryGiftSave()->Debug_GetOneDayFlag(mode);

  swprintf(
    pWorkStr,
    gfl2::debug::DEBUGWIN_NAME_LEN,
    L"%ls evID:%d, %04d/%02d/%02d",
    pWinItem->GetName(),
    rOnedayData.eventID,
    rOnedayData.year,
    rOnedayData.month,
    rOnedayData.day
  );

  return pWorkStr;
}


//------------------------------------------------------------------
/**
  *  @brief    
  */
//------------------------------------------------------------------
void  GiftDebug::OnUpdate(void)
{
  m_Text.CLS();
  

  if(m_ViewItemInfos[VALITEM_IsDispPenaltyInfo].value)
  {
    Savedata::MysteryGiftSave*                    pGiftSave   = GetMysteryGiftSave();
    const Savedata::MysteryGiftSave::SERIAL_DATA* pSerialData = pGiftSave->Debug_GetSerialData();
    
    m_Text.PrintLn(L"[PenaltyInfo]");
    m_Text.PrintLn(L" +-<Server>");
    m_Text.PrintLn(L" | +- Time(UTC):[%04d/%02d/%02d %02d:%02d]", m_ServerDate.GetYear(), m_ServerDate.GetMonth(), m_ServerDate.GetDay(), m_ServerDate.GetHour(), m_ServerDate.GetMinute());
    m_Text.PrintLn(L" +-<Save>");
    m_Text.PrintLn(L"   +- Time(UTC):[%04d/%02d/%02d %02d:%02d]", pSerialData->failedYear, pSerialData->failedMonth, pSerialData->failedDay, pSerialData->failedHour, pSerialData->failedMinute);
    m_Text.PrintLn(L"   +- NGCount: %2d/%2d",                       pSerialData->NGCounter, Savedata::MysteryGiftSave::SERIAL_AUTH_FAILED_COUNT_TO_PENALTY);
    m_Text.PrintLn(L"   +- Penalty: %s",                            pSerialData->NGflag ? "Yes" : "No");
  }
}


//------------------------------------------------------------------
/**
  *  @brief    
  */
//------------------------------------------------------------------
void  GiftDebug::OnDraw(const gfl2::gfx::CtrDisplayNo displayNo)
{
  m_Text.Draw(displayNo);
}


//------------------------------------------------------------------
/**
  *  @func     
  *  @brief    
  *  @param    
  *  @return   
  */
//------------------------------------------------------------------
#if defined( GF_PLATFORM_CTR )
void  GiftDebug::OverwriteServerTimeByLocalTimeIfEnable(nn::nex::DateTime & rNexDateTime)
{
  if(!m_ViewItemInfos[VALITEM_OverwriteServerTimeByLocalTime].value) return;

  rNexDateTime  = nn::nex::DateTime(
                   m_LocalDate.GetYear(),
                   m_LocalDate.GetMonth(),
                   m_LocalDate.GetDay(),
                   m_LocalDate.GetHour(),
                   m_LocalDate.GetMinute(),
                   0
                  );
}
#endif






} /*  namespace Debug     */
} /*  namespace Evolution */
} /*  namespace NetApp    */

#endif  /*  #if PM_DEMUG  */

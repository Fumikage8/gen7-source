// ============================================================================
/*
 * @file gflnet2_CTR_CecMessageBoxEventListener.h
 * @brief ライブラリで使用するメッセージボックスのイベントリスナーです
 * @date 2015.02.16
 */
// ============================================================================
#ifdef  GF_PLATFORM_CTR
#if !defined( GFLNET2_CTR_CECMESSAGEBOXEVENTLISTENER_H_INCLUDE )
#define GFLNET2_CTR_CECMESSAGEBOXEVENTLISTENER_H_INCLUDE
#pragma once

#include <macro/include/gfl2_Macros.h>
#include <nn/cec.h>

GFL_NAMESPACE_BEGIN(gflnet2)
GFL_NAMESPACE_BEGIN(cec)
GFL_NAMESPACE_BEGIN(ctr)



class CTR_CecMessageBoxEventListener
{
public:
  // --------------------------------------------------------------------------
  /**
   * @brief  3DS本体にメッセージボックスが作成されている時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnIsCreateMessageBoxSuccess() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  3DS本体にメッセージボックスが作成されていない時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnIsCreateMessageBoxFailure() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  3DS本体にメッセージボックスの作成に成功した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnCreateMessageBoxSuccess() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  3DS本体にメッセージボックスの作成に失敗した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnCreateMessageBoxFailure() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  3DS本体にメッセージボックスの削除に成功した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnDeleteMessageBoxSuccess() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  3DS本体にメッセージボックスの削除に失敗した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnDeleteMessageBoxFailure() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  送受信ボックス内にあるデータの削除に成功した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnDeleteAllMessageSuccess() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  送受信ボックス内にあるデータの削除に失敗した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnDeleteAllMessageFailure() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  送信データの書き込みに成功した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnWriteMessageSuccess() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  送信データの書き込みに失敗した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnWriteMessageFailure() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  受信データの読み込みに成功した時にコールされるイベントハンドラです。
   * @param  cecMessage 読み込んだ受信データ
   */
  // --------------------------------------------------------------------------
  virtual void OnReadMessageSuccess( nn::cec::Message& cecMessage ) = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  受信データの読み込みに失敗した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnReadMessageFailure() = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  受信ボックス内にある受信データ数の取得に成功した時にコールされるイベントハンドラです。
   * @param  messageCount 受信ボックス内にある受信データ数
   */
  // --------------------------------------------------------------------------
  virtual void OnGetMessageCountSuccess( const s32 messageCount ) = 0;

  // --------------------------------------------------------------------------
  /**
   * @brief  受信ボックス内にある受信データ数の取得に失敗した時にコールされるイベントハンドラです。
   */
  // --------------------------------------------------------------------------
  virtual void OnGetMessageCountFailure() = 0;

};


GFL_NAMESPACE_END(ctr)
GFL_NAMESPACE_END(cec)
GFL_NAMESPACE_END(gflnet2)

#endif // GFLNET2_CTR_CECMESSAGEBOXEVENTLISTENER_H_INCLUDE
#endif

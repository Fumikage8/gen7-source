#pragma once
//=================================================================================================
/**
 *  @file   SpringSimulation.h
 *  @brief  バネシミュレーション
 *  @author yy-ikeuchi@gamefreak.co.jp
 *  @date   2015.02.17
 */
//=================================================================================================
#include <macro/include/gfl2_Macros.h>
#include <types/include/gfl2_Typedef.h>

GFL_NAMESPACE_BEGIN(gfl2)
GFL_NAMESPACE_BEGIN(math)

//----------------------------------------------------------------------------------------
//! @brief バネシミュレーション
//----------------------------------------------------------------------------------------
class SpringSimulation
{
public:

  //-----------------------------------------------------------------------------
  /**
  *  @brief  コンストラクタ
  */
  //-----------------------------------------------------------------------------
  SpringSimulation();

  //-----------------------------------------------------------------------------
  /**
  *  @brief  初期化
  */
  //-----------------------------------------------------------------------------
  void Init(void);

  //-----------------------------------------------------------------------------
  /**
  *  @brief  更新
  */
  //-----------------------------------------------------------------------------
  void Update(void);

  //-----------------------------------------------------------------------------
  /**
  *  @brief 跳ねるリクエスト
  *
  *  @param  mass          質量
  *  @param  k             バネ定数
  *  @param  firstVelocity 初速度
  *  @param  damping       減衰率
  *
  *  @return 無し
  */
  //-----------------------------------------------------------------------------
  void Request(f32 mass,f32 k,f32 firstVelocity,f32 damping);

  //-----------------------------------------------------------------------------
  /**
  *  @brief  バネの先端についている重りの座標を取得
  *
  *  @return 座標
  */
  //-----------------------------------------------------------------------------
  f32 GetPostion(void);

  //-----------------------------------------------------------------------------
  /**
  *  @brief 有効か取得する 
  *
  *  @return true 有効
  */
  //-----------------------------------------------------------------------------
  b32 IsValid(void) const { return m_isUpdate; }

private:

  //! デフォルトの自然長
  static f32 NATURAL_LENGTH;
  //! デフォルトの重力
  static f32 GRAVITY;
  //! デフォルトの微小時間
  static f32 DELTA_TIME;

  b32    m_isUpdate;
  f32    m_mass;                //< 質量
  f32    m_gravity;             //< 重力加速度
  f32    m_dt;                  //< 微小時間
  f32    m_k;                   //< ばね定数
  f32    m_naturalLength;       //< 自然長
  f32    m_position;            //< 位置
  f32    m_velocity;            //< 速度
  f32    m_damping;             //< 減衰率
};

GFL_NAMESPACE_END(math)
GFL_NAMESPACE_END(gfl2)
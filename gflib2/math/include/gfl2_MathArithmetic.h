#ifndef __GFL2_MATHARITHMETIC_H__
#define __GFL2_MATHARITHMETIC_H__

//[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
/**
 *	GAME FREAK inc.
 *
 *	@file		gfl2_MathArithmetic.h
 *	@brief  算術　関数定義
 *	@author	tomoya takahashi
 *	@date		2010.10.13
 *  全部は移動していません。以前使用されていて、他にかぶっていないことを確認して持ってきています。k.ohno
 *
 */
//]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
#pragma once


namespace gfl2 {
namespace math {


/*!--------------------------------------------------------------------------*
  @brief        f32型からs16型に変換します

  @param[in]    x   s16型に変換する値

  @return       x と同じ値を持ったs16型の値を返します
 *---------------------------------------------------------------------------*/
inline s16 F32ToS16( f32 x) { return s16(x); }


/*!--------------------------------------------------------------------------*
  @brief        f32型からu16型に変換します

  @param[in]    x   u16型に変換する値

  @return       x と同じ値を持ったu16型の値を返します
 *---------------------------------------------------------------------------*/
inline u16 F32ToU16( f32 x) { return u16(x); }


/*!--------------------------------------------------------------------------*
  @brief        u16型からf32型に変換します

  @param[in]    x   f32型に変換する値

  @return       x と同じ値を持ったf32型の値を返します
 *---------------------------------------------------------------------------*/
inline f32 U16ToF32( u16 x) { return f32(x); }


/*!--------------------------------------------------------------------------*
  @brief        s16型からf32型に変換します

  @param[in]    x   f32型に変換する値

  @return       x と同じ値を持ったf32型の値を返します
 *---------------------------------------------------------------------------*/
inline f32 S16ToF32( s16 x) { return f32(x); }


} /* end of namespace math */
} /* end of namespace gfl2 */

#endif // __GFL2_MATHARITHMETIC_H__

#if defined GF_PLATFORM_CTR
#include <nn/nlib/testing/testing.h>
#else
#include <gtest/gtest.h>
#endif

#include <math/include/gfl2_Quaternion.h>
#include <math/include/gfl2_Matrix44.h>

TEST(QuaternionTest, Transform){
  gfl2::math::Vector3 axis = gfl2::math::Vector3(1.0f, 2.0f, 3.0f);
  gfl2::math::Quaternion rot = gfl2::math::Quaternion(axis, 1.0f);
  gfl2::math::Vector4 pos = gfl2::math::Vector4(1.0f, 1.0f, 1.0f, 1.0f);

  gfl2::math::Matrix34 tmp;
  rot.QuaternionToMatrix(tmp);

  gfl2::math::Vector4 exp = tmp.TransformVec(pos);

  gfl2::math::Vector4 real = rot.Transform(pos);

  EXPECT_FLOAT_EQ(exp.x, real.x);
  EXPECT_FLOAT_EQ(exp.y, real.y);
  EXPECT_FLOAT_EQ(exp.z, real.z);
}

TEST(QuaternionTest, QuatToMatrix){
    struct CheckQuat
    {
      float quat[4];
      float matrix[16];
    };

    CheckQuat checkList[] =
    {
      {
  {
0.5, -0.5, 0.4999998, 0.5000002,
  },
  {
3.139165E-07, 0, 1, 0,
-1, 3.139165E-07, 3.139165E-07, 0,
-3.139165E-07, -1, 9.854355E-14, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.3918556, 0.3866082, 0.2744037, 0.7884706,
  },
  {
0.5504733, 0.1297292, -0.8247117, 0,
-0.7357077, 0.5423035, -0.4057598, 0,
0.3946052, 0.8301067, 0.3939664, 0,
0, 0, 0, 1,
  },
},
{
  {
0.4908295, 0.2589539, 0.164289, 0.8154989,
  },
  {
0.8119041, 0.5221595, -0.2610774, 0,
-0.01375065, 0.4641911, 0.8856284, 0,
0.583629, -0.7154553, 0.3840587, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.02468312, -0.3480971, -0.09551857, 0.9322528,
  },
  {
0.7394092, -0.1609107, 0.6537445, 0,
0.1952792, 0.9805339, 0.02047767, 0,
-0.6443137, 0.1125213, 0.7564383, 0,
0, 0, 0, 1,
  },
},
{
  {
0.005589649, -0.2461765, 0.01288885, 0.9691232,
  },
  {
0.878462, 0.02222969, 0.4772948, 0,
-0.02773385, 0.9996052, 0.00448825, 0,
-0.4770066, -0.01717998, 0.8787318, 0,
0, 0, 0, 1,
  },
},
{
  {
6.992419E-05, -0.380836, -0.007695725, 0.9246106,
  },
  {
0.7098094, -0.01428436, 0.704249, 0,
0.01417784, 0.9998816, 0.005990924, 0,
-0.7042512, 0.005732314, 0.7099278, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 1.748456E-07, 0, 1,
  },
  {
1, 0, -3.496911E-07, 0,
0, 1, 0, 0,
3.496911E-07, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0.3826834, 8.076812E-08, -3.345525E-08, 0.9238796,
  },
  {
1, 0, -1.748456E-07, 0,
1.236345E-07, 0.7071068, 0.7071068, 0,
1.236345E-07, -0.7071068, 0.7071068, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.02964964, -0.007787871, 0.9667376, -0.2539264,
  },
  {
-0.8692845, -0.4904987, -0.06128194, 0,
0.4914223, -0.8709214, 0, 0,
-0.05337176, -0.03011531, 0.9981205, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.07082636, 0.1399681, 0.3312593, 0.9304084,
  },
  {
0.7413524, 0.596586, -0.3073787, 0,
-0.6362398, 0.7705018, -0.03906344, 0,
0.2135311, 0.2245263, 0.9507852, 0,
0, 0, 0, 1,
  },
},
{
  {
0.4055797, 0.579228, -0.5792279, 0.4055799,
  },
  {
-0.3420201, 0, -0.9396926, 0,
0.9396926, 3.139165E-07, -0.3420201, 0,
2.94985E-07, -1, -1.073658E-07, 0,
0, 0, 0, 1,
  },
},
{
  {
-8.742278E-08, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, -1.748456E-07, 0,
0, 1.748456E-07, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.001025599, -0.0003153989, 3.222974E-07, 0.9999994,
  },
  {
0.9999998, 1.29154E-06, 0.0006307968, 0,
2.351104E-09, 0.9999979, -0.002051196, 0,
-0.0006307982, 0.002051196, 0.9999977, 0,
0, 0, 0, 1,
  },
},
{
  {
0, -0.1908093, 0, 0.9816271,
  },
  {
0.9271836, 0, 0.3746072, 0,
0, 1, 0, 0,
-0.3746072, 0, 0.9271836, 0,
0, 0, 0, 1,
  },
},
{
  {
0, -0.1052318, 0, 0.9944477,
  },
  {
0.9778525, 0, 0.2092951, 0,
0, 1, 0, 0,
-0.2092951, 0, 0.9778525, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0.1318563, 0, 0.9912689,
  },
  {
0.9652278, 0, -0.2614101, 0,
0, 1, 0, 0,
0.2614101, 0, 0.9652278, 0,
0, 0, 0, 1,
  },
},
{
  {
0, -0.05301859, 0, 0.9985935,
  },
  {
0.994378, 0, 0.105888, 0,
0, 1, 0, 0,
-0.105888, 0, 0.994378, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0.001690411, 0.0005299452, 8.931355E-07, 0.9999985,
  },
  {
0.9999995, 3.577918E-06, -0.001059886, 0,
5.382042E-09, 0.9999943, 0.003380817, 0,
0.001059892, -0.003380815, 0.9999937, 0,
0, 0, 0, 1,
  },
},
{
  {
0, -0.1706037, 0, 0.9853398,
  },
  {
0.9417888, 0, 0.3362052, 0,
0, 1, 0, 0,
-0.3362052, 0, 0.9417888, 0,
0, 0, 0, 1,
  },
},
{
  {
0.005451226, -0.06127028, -0.02657554, 0.9977525,
  },
  {
0.9910794, -0.05369961, 0.1219754, 0,
0.05236362, 0.9985281, 0.01413453, 0,
-0.1225549, -0.007621367, 0.9924325, 0,
0, 0, 0, 1,
  },
},
{
  {
0.04092407, 0.1016679, -0.004017378, 0.9939682,
  },
  {
0.979295, 0.0003350359, -0.2024381, 0,
0.01630762, 0.9966182, 0.08053757, 0,
0.2017805, -0.08217132, 0.9759778, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.1345988, -0.04948736, -0.06342513, 0.9876292,
  },
  {
0.9870566, -0.1119592, 0.1148242, 0,
0.1386029, 0.9557209, -0.2595899, 0,
-0.08067645, 0.2721449, 0.9588684, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
4.371139E-08, -4.371139E-08, 4.371139E-08, 1,
  },
  {
1, 8.742278E-08, 8.742278E-08, 0,
-8.742278E-08, 1, 8.742278E-08, 0,
-8.742277E-08, -8.742278E-08, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.004346044, 0.05950802, -0.09693403, 0.9935008,
  },
  {
0.9741252, -0.1931253, -0.1174, 0,
0.1920908, 0.9811698, -0.0201723, 0,
0.1190851, -0.00290111, 0.9928798, 0,
0, 0, 0, 1,
  },
},
{
  {
0.01120859, -0.1123631, -0.001267539, 0.9936032,
  },
  {
0.9747459, -0.005037725, 0.2232603, 0,
-3.375665E-09, 0.9997455, 0.02255863, 0,
-0.2233171, -0.02198893, 0.9744978, 0,
0, 0, 0, 1,
  },
},
{
  {
0.003250179, -0.0277875, -0.116128, 0.9928401,
  },
  {
0.9714842, -0.2307738, 0.05442221, 0,
0.2304125, 0.9730074, 0.01290763, 0,
-0.05593196, -4.966056E-10, 0.9984345, 0,
0, 0, 0, 1,
  },
},
{
  {
0.01848391, -0.1809561, -0.0009072318, 0.983317,
  },
  {
0.9345081, -0.008473746, 0.3558409, 0,
-0.00490536, 0.999315, 0.03667943, 0,
-0.355908, -0.03602276, 0.9338264, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
-4.371139E-08, -4.371139E-08, 4.371139E-08, 1,
  },
  {
1, 8.742278E-08, 8.742278E-08, 0,
-8.742277E-08, 1, -8.742278E-08, 0,
-8.742278E-08, 8.742277E-08, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0.08400952, -0.05733746, -0.004842057, 0.9948022,
  },
  {
0.9933779, -0.01926756, 0.1132653, 0,
-9.732405E-09, 0.9858379, 0.167701, 0,
-0.1148924, -0.1665905, 0.9793096, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.0496176, -0.1681101, 0.01043336, 0.9844634,
  },
  {
0.9432603, 0.03722497, 0.3299612, 0,
-0.003860087, 0.9948585, -0.1012013, 0,
-0.3320319, 0.09418551, 0.9385541, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.09612856, 0.1484087, -0.2212808, 0.9590458,
  },
  {
0.8580193, -0.4529694, -0.2421188, 0,
0.3959042, 0.8835883, -0.2500634, 0,
0.3272044, 0.1187034, 0.9374683, 0,
0, 0, 0, 1,
  },
},
{
  {
0.1203746, 0.2883909, 0.03736028, 0.9491811,
  },
  {
0.8308698, 0.1403532, -0.538476, 0,
-0.001493442, 0.9682283, 0.2500634, 0,
0.5564649, -0.2069659, 0.8046813, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.1943984, 0.08253204, -0.01641664, 0.9773066,
  },
  {
0.9858379, -0.06417638, -0.1549355, 0,
-5.66979E-09, 0.9238795, -0.3826835, 0,
0.167701, 0.3772638, 0.9107955, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0.1090101, 0, 0.9940407,
  },
  {
0.9762336, 0, -0.2167209, 0,
0, 1, 0, 0,
0.2167209, 0, 0.9762336, 0,
0, 0, 0, 1,
  },
},
{
  {
0.009297749, -0.0697258, 0.1238453, 0.9898051,
  },
  {
0.9596013, 0.2438689, 0.1403329, 0,
-0.2464621, 0.9691517, 0.00113549, 0,
-0.1357269, -0.03567635, 0.9901037, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.05094556, 0.2023283, -0.1958358, 0.9581838,
  },
  {
0.8414232, -0.3959088, -0.3677815, 0,
0.3546779, 0.9181058, -0.1768767, 0,
0.4076894, 0.01838417, 0.9129356, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.1909238, 0.09393987, -0.01835896, 0.976927,
  },
  {
0.9816765, -0.07174143, -0.1765345, 0,
7.490865E-09, 0.9264221, -0.3764865, 0,
0.1905551, 0.3695879, 0.9094468, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.0007079363, -0.1115408, 0.001755955, 0.993758,
  },
  {
0.9751111, 0.003647916, 0.2216867, 0,
-0.003332061, 0.9999928, -0.001798756, 0,
-0.2216917, 0.001015314, 0.9751163, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0, 0, 1,
  },
  {
1, 0, 0, 0,
0, 1, 0, 0,
0, 0, 1, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0.1030359, 0, 0.9946776,
  },
  {
0.9787672, 0, -0.2049751, 0,
0, 1, 0, 0,
0.2049751, 0, 0.9787672, 0,
0, 0, 0, 1,
  },
},
{
  {
0, 0.03741144, 0, 0.9992999,
  },
  {
0.9972008, 0, -0.0747705, 0,
0, 1, 0, 0,
0.0747705, 0, 0.9972008, 0,
0, 0, 0, 1,
  },
},
{
  {
-0.001126204, 0.07561644, -0.001039039, 0.9971358,
  },
  {
0.9885621, -0.002242445, -0.1507974, 0,
0.001901807, 0.9999953, -0.002403094, 0,
0.1508021, 0.002088821, 0.9885617, 0,
0, 0, 0, 1,
  },
},
{
  {
0, -0.02623599, 0, 0.9996558,
  },
  {
0.9986234, 0, 0.05245392, 0,
0, 1, 0, 0,
-0.05245392, 0, 0.9986234, 0,
0, 0, 0, 1,
  },
},
{
  {
0, -0.08850687, 0, 0.9960756,
  },
  {
0.9843331, 0, 0.1763191, 0,
0, 1, 0, 0,
-0.1763191, 0, 0.9843331, 0,
0, 0, 0, 1,
  },
},

    };

  int count = sizeof(checkList) / sizeof(checkList[0]);
  for (int i = 0; i < count; ++i)
  {
    const CheckQuat& c = checkList[i];

    gfl2::math::Quaternion q(c.quat[0], c.quat[1], c.quat[2], c.quat[3]);
    gfl2::math::Matrix34 m;
    q.QuaternionToMatrix(m);

    gfl2::math::Matrix44 tmp(m);
    tmp = tmp.Transpose();

    for (int j = 0; j < 16; ++j)
    {
      f32 checkValue = ((f32*)&tmp)[j];

      f32 diff = c.matrix[j] - checkValue;
      //EXPECT_FLOAT_EQ(c.matrix[j], checkValue);

      EXPECT_NEAR(checkValue, c.matrix[j], 0.01f);
    }
  }
}

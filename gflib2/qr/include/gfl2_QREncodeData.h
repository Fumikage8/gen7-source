// ============================================================================
/*
 * @file gfl2_QREncodeData.h
 * @brief QRコードのエンコードデータです。
 * @date 2015.03.05
 */
// ============================================================================
#if !defined( GFL2_QRENCODEDATA_H_INCLUDE )
#define GFL2_QRENCODEDATA_H_INCLUDE
#pragma once

#include <macro/include/gfl2_Macros.h>
#include <types/include/gfl2_Typedef.h>
#include <heap/include/gfl2_Heap.h>


GFL_NAMESPACE_BEGIN(gfl2)
GFL_NAMESPACE_BEGIN(qr)


class QREncodeData
{
  GFL_FORBID_COPY_AND_ASSIGN( QREncodeData );
public:
  // --------------------------------------------------------------------------
  /**
   * @brief  エンコードデータを格納するバッファを作成します。
   * @param  pDeviceHeap バッファを作成する為のデバイスヒープです。
   * @param  bufferSize バッファのサイズです。byteサイズを指定します。
   */
  // --------------------------------------------------------------------------
  QREncodeData( gfl2::heap::HeapBase* pDeviceHeap, u32 bufferSize );

  // --------------------------------------------------------------------------
  /**
   * @brief  エンコードデータを格納するバッファを削除します。
   */
  // --------------------------------------------------------------------------
  virtual~QREncodeData();

  // --------------------------------------------------------------------------
  /**
   * @brief  エンコードデータをバッファにコピーします。
   * @param  pData エンコードデータ
   * @param  dataSize エンコードデータのサイズ
   */
  // --------------------------------------------------------------------------
  void CopyData( const u8* pData, u32 dataSize );

  // --------------------------------------------------------------------------
  /**
   * @brief  セルのサイズを設定します。
   * @param  cellSize セルのサイズです。１セルのドット数を指定します
   */
  // --------------------------------------------------------------------------
  void SetCellSize( u32 cellSize );

  // --------------------------------------------------------------------------
  /**
   * @brief  フォーマットバージョンを設定します。
   * @param  version フォーマットバージョンです。0～40を指定します
   *                 0を指定するとフォーマットバージョンを自動で設定します。
   */
  // --------------------------------------------------------------------------
  void SetVersion( u32 version );

  // --------------------------------------------------------------------------
  /**
   * @brief  エンコードデータを取得します。
   * @return エンコードデータ
   */
  // --------------------------------------------------------------------------
  u8* GetData() const;

  // --------------------------------------------------------------------------
  /**
   * @brief  エンコードデータのサイズを取得します。
   * @return エンコードデータのサイズ
   */
  // --------------------------------------------------------------------------
  u32 GetDataSize() const;

  // --------------------------------------------------------------------------
  /**
   * @brief  セルのサイズを取得します。
   * @return セルのサイズ
   */
  // --------------------------------------------------------------------------
  u32 GetCellSize() const;

  // --------------------------------------------------------------------------
  /**
   * @brief  フォーマットバージョンを取得します。
   * @return フォーマットバージョン
   */
  // --------------------------------------------------------------------------
  u32 GetVersion() const;

private:
  void ClearBuffer();
  void CreateBuffer( u32 bufferSize );

private:
  gfl2::heap::HeapBase*     m_pDeviceHeap;
  u8*                       m_pBuffer;
  u32                       m_BufferSize;
  u32                       m_DataSize;
  u32                       m_CellSize;
  u32                       m_Version;

};


GFL_NAMESPACE_END(qr)
GFL_NAMESPACE_END(gfl2)

#endif // GFL2_QRENCODEDATA_H_INCLUDE

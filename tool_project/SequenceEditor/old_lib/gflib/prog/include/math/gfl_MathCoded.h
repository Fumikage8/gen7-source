#ifndef __GFL_MATHCODED_H__
#define __GFL_MATHCODED_H__
//============================================================================================
/**
 *	GAME FREAK inc.
 *	@file		gfl_MathCoded.h
 *	@brief  暗号管理
 *	@author	k.ohno
 *	@date		2010.12.16
 *
 */
//============================================================================================
#pragma once





namespace gfl{
namespace math{

//-----------------------------------------------------------------------------
/**
 * @brief   チェックサムの算出ルーチン
 * @param adrs  開始アドレス
 * @param size  データサイズ
 * @retval  "算出した値"
 */
//-----------------------------------------------------------------------------
extern u32 CheckSum(const void * adrs, u32 size);
//-----------------------------------------------------------------------------
/**
 *  @brief   暗号処理
 * @param[in] data  暗号化するデータのポインタ
 * @param[in] size  暗号化するデータのサイズ
 * @param[in] code  暗号化キーの初期値
 */
//-----------------------------------------------------------------------------
extern void KeyStreamCoded(void *data,u32 size,u32 code);
//-----------------------------------------------------------------------------
/**
 *  @brief   復号処理
 * @param[in] data  復号するデータのポインタ
 * @param[in] size  復号するデータのサイズ
 * @param[in] code  暗号化キーの初期値
 */
//-----------------------------------------------------------------------------
extern void KeyStreamDecoded(void *data,u32 size,u32 code);

}//math
}//gfl
#endif // __GFL_MATHCODED_H__
